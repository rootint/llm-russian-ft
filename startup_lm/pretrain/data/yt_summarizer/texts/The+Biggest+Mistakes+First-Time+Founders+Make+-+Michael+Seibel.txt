Here are some of the biggest mistakes first-time founders make when starting their company and in the first year afterwards. First, I often see founders choosing to solve a problem that they actually don't care about. While this mistake isn't fatal, and while there are many, many examples of founders who've learned to love their product or their problem at a later date, one of the things that I do see is that a lot of startups that fail basically fail because they lose motivation to continue working on their company. And a lot of that has to do with the fact that they actually didn't really like the problem they were working on in the beginning. They were trying to pick a problem that they thought people might want or they thought could grow quickly or they thought might be cool, but it wasn't actually something they were willing to devote a significant amount of time, you know, five years plus of their life to solving. There's no deep connection to the problem. The second one is helping users you don't care about. You know, we had this experience at Justin.TV and Twitch. In the beginning of Justin.TV, you know, we were kind of excited by the general idea of democratizing live video and making it easy for anyone online to share live video with their friends. But we weren't actually terribly in love with the people who chose to use the platform as it continued to grow. And only when Emmett kind of really refocused the company around video game streaming did we regain the love for our users. You know, Emmett was a gamer and he loved gamers and he loved building things for gamers. And that was really one of the core drivers of Twitch becoming a successful company. The next is choosing co-founders that you don't know well. Once again, all of these will have counterexamples. There are exceptions to every rule. But in general, startups are so hard that it is nice to have a pre-existing relationship with your co-founder just so you have a sense of whether you're going to be able to get through the hard times together, whether you can work well together. Now, that pre-existing relationship can be a friendship. It could be a co-worker. They could be someone in your school you did a school project with. But it's just helpful that you've had some context with them, that you didn't just find them on the street yesterday. The next one is not having transparent conversations with your co-founders. There are very typical topics that create drama amongst co-founding teams. Performance. Is my co-founder working as hard as I am? Goals. Are we trying to accomplish the same goal? Roles. Whose job is it to do engineering? Whose job is it to do product? Whose job is it to talk to customers? And oftentimes, founders just don't have these completely transparent, honest conversations about these topics. And as a result, resentment builds up and the relationship degrades. And then when you do have the conversation, it turns into a fight. And that can really critically harm the startup. So that's really important to me, just having open, transparent conversations, well-organized conversations that are not designed to argue or to create fights, but to really just share how you feel about the current situation in the company, how it's organized, who's doing what. The next one is not launching. Launching has become this interesting phrase. I think when people think about launching their company, they think, oh, I'm going to get in the press. I'm going to be on the news. I'm going to be on these popular blogs. And so they're afraid of launching because they don't think they're ready for all that exposure. One of the things that we tell people is, first, let's think about the products that you might use and like a lot today. Do you remember the day Snapchat launched? Do you remember the day Instagram launched? Do you remember the day that WhatsApp launched? Remember the day that Uber or Lyft launched? Most likely you don't. So it turns out that launching is nowhere near a significant event to your users as it is to you. So you should move up the launch as soon as possible. Until you can get your product in front of customers, you can't validate whether it solves their problem. And so it's much better to build a crappier product, release it sooner, and get it out there in front of customers, see if they want to use it. Now, there's some exceptions. For example, in some extremely regulated markets like banking, for example, or lending, it's just really hard to launch. You actually have to get a bunch of shit done before you're even allowed to get customers. But in most consumer and B2B startups that we encounter, it's actually possible to get some form of MVP built and launched in less than a month. And so that's what you should be thinking about. The next one is not using analytics, not measuring what your users do when they come to the site. We just see this time and time again. Part and parcel to building product is measuring so that you know what's being used and what's not. The next biggest mistake is having no idea where your first users will come from. I get this email a lot. A lot of founders email me saying, where do I find my first users? And I kind of think to myself, you chose this problem that you're working on and you chose to build a solution. It's interesting to me that you chose a problem where you don't know anyone who has the problem, including yourself. I think it's a completely different question. Where do I get my first hundred users or my first thousand users? That might require some kind of deep digging. But where I get my first two users or one user or three users or five users, that should come from people you know or you already have identified through some other way. And then last is prioritization. Oftentimes people will prioritize sizzle over stake. They'll prioritize press and hiring, conferences, investors, all these other things above getting product out there and talking to users. At the end of the day, we look at these startups and we say, you're cargo culting a startup. You are pretending to be a startup. But the actual work of startups is pushing product, getting it into users' hands and seeing if they like it and then iterating it and improving. So those are the common mistakes that startups make. Caveat, I bet you can name a startup that has made every one of these mistakes and has still been successful. In fact, I bet there's a startup that's made all of these mistakes and has still been successful. But those tend to be exceptions. And if you're trying to kind of generally improve the odds of your startups being successful, try to minimize these mistakes as much as possible. Thank you. Thank you.