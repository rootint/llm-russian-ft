Let's say that changing the world is like uprooting a tree, like a big, old, tall tree. Imagine there were two founders. One founder knew that trees have roots and the other founder had no idea, right? Like the trees with roots person, they have an advantage. They have a very large advantage. The tree without roots person, they're gonna have a lot of very horrible, how do I phrase this, on-the-job learnings. Yeah, it's not moving. Like, we don't get it. Like, we're pushing it and it won't fall over. Yeah, we've done all the math. Like if the tree ends right where the ground begins, like pushing like this, it should work. Hey, this is Michael Seibel with Dalton Caldwell and welcome to Rookie Mistakes. We asked YC founders for their rookie mistakes so we could share them with you and help you avoid them. Here's the next comment that was written by a YC founder. We built a product because we thought the world should be a certain way, not because we had a customer who actually wanted to buy the thing we were building. This is coming from a pure place and we look at our heroes, right? We look at Elon Musk. We look at Steve Jobs and we have this model of people that forced the universe to their will. And Elon, electric cars are the future. I am going to impart electric cars. I'm gonna make it happen. And again, he kind of did, good for him, right? But for most of us mere mortals, it's pretty hard to force people to want the thing that you're selling or the thing that you think is good for them. It's really hard if someone doesn't want something to like debate them and convince them they do actually want it when they don't actually want it. Most people don't have organic experience with sales. And so they kind of, their vision is like, oh, I walked onto a used car lot to look around and this genius sales person convinced me to buy this car. And it's like, that's not even how it works in real, like you didn't just randomly walk on the used car lot. Nobody who doesn't want a car walks on the lot. You made a great point. Do you know what kind of idea we always come up, like I would come up with is guess what? Buying a car sucks and dealing with car salesman sucks. Buying a house sucks. Let's just like build a website and then we'll get rid of car dealers. So this is an example of that. It's like, you kind of run into something that's annoying and you're like, yeah, let's just get rid of that. And again, I'm with you. Let's get rid of that. You know, I don't like buying a car either, but I think what happens when you, again, haven't done the research is you were like, oh, actually there's a reason car dealers exist. And oh, and actually there's incentives for these, you know, this is like, like the more you dig into that, you realize that you can't just wave a magic wand and make car dealers go away. You can't just sprinkle software on the problem. Yeah, or like realtors, like buying a house. Why is it so hard to buy a house? Well, you know, I don't even know how to summarize that, but like a lot of founders want to believe they can just like start a company and revolutionize the home sales process, right? So I feel where it's coming from, but in practice, the simplistic engineering efficiency arguments don't always work when applied to the real world. Yeah. I mean, you know about this with hiring, right? Like, haven't you seen this with hiring? I see this hiring all the time. I see the hiring startup applies to IC, and the thesis is always the same. I'm an engineer, I'm a genius engineer, and I am being assessed by a non-technical recruiter. This is a crime, like this is a crime against humanity. Like it's dehumanizing that I have to go through this experience. And if only the hiring manager was empowered with software, the entire recruiting team and all recruiters would just go away, disappear off the face of the earth through the hiring manager and software. And what's weird is that like, I kind of believe the premise like I believe an engineer is better at determining whether another engineer is good or bad. However, I also look at the way the world is organized and I ask myself, well, if it seems consistently organized and there's lots of teams of recruiters exist at all these companies, there must be some efficiency going on that I don't understand, right? And the one core thing that I've learned is that even though engineers are better at grading other engineers, there are two other facts. One, they don't tend to enjoy doing it. And two, it doesn't tend to be the greatest way to extract value out of a great engineer. Yeah, it's not the best use of their time. Like if you're employing engineers, you don't really want them to spend all their time doing this. You want them to keep doing their jobs. And so what's funny is that like hiring companies inevitably run against this, like you aren't going to defeat HR. You aren't going to get rid of all the recruiters. Even though you don't believe they should exist in the world, they are gonna exist in the world. Either you're gonna accommodate them or they will kill you. Like they tend to actually have way more power than you might think. And at the end of the day, the hiring manager is like, you know, this comes up a lot. Like the hiring manager is your like talk friend, but not your action friend. Like it's the person you talk to is like, oh yeah, I wish I never had to use these recruiters. Like I wish I didn't have to do this. I always get all these bad candidates, but they never do the thing you want them to do. Like use your product all the time. To push back on ourselves. Hey, what are Dalton and Michael saying? They're not saying you should try to change things. Like shouldn't, aren't we, you know, shouldn't you be trying harder to make the system better? Let me answer that first. I don't know what you say, Michael. All we're saying is you can make huge changes in human behavior if you really understand the subtle pressure points. You've got to really understand the motivations of all of the key parties and cater to those motivations, cater to human institutions. Like the people that do really change the way the world works got a lot of small things right in the earliest stages. Like ride sharing, like the idea of getting to a stranger's car and then driving to the airport was like bizarre when it came out. Our younger viewers may not remember what it was like, but at the time it was like, yeah, here's my idea. A stranger comes to your house and you get in their back seat of the Toyota, right? That's normal. We would have, that was insane. And so to actually architect something like ride sharing, you had to really understand all of the people involved. They actually started off with those hired cars, those like limo cars, which was normal. So there's all these like little things that had to happen for that idea to actually work and to normalize ride sharing that if you didn't understand all the core constituents and you're just like, hey, cars are inefficient. We should have more, we should let people share rides. How many times has YC funded that idea before Uber and it didn't work? This was actually a really common bad startup idea was ride sharing. Isn't that hilarious? And so it's, I guess the point we're making here, and again, I want to hear what you think of this, Michael. You just need to understand the little things, folks. You need to understand the small motivations of all people involved in an ecosystem and design the thing well, rather than just think you can burst into the scene with something and like everyone will magically use your solution and boom, you know, hey, there's no more realtors. We can just buy and sell a house on a website. Like it's more complicated than that, man. You have to have a really, someone will solve this eventually. Maybe someone watching this video, but you have to really look at the intricate motivations of every person involved and have an answer for why they're incentivized to use your thing. You know, I'm gonna try to come up with the bad analogy on the spot. Let's say that changing the world is like uprooting a tree, like a big, old, tall tree. Imagine there were two founders. One founder knew that trees have roots and the other founder had no idea, right? Like the trees with roots person, they have an advantage. They have a very large advantage. The tree without roots person, they're gonna have a lot of very horrible, how do I phrase this? On the job learnings. It's not moving. We don't get it. We're pushing it and it won't fall over. Yeah, we've done all the math. Like if the tree ends right where the ground begins, like pushing like this, it should work. That's a great way to say it. There's so much under the surface. There's so much under the surface to understand with a lot of these ideas. And if you don't understand it, yeah, you're gonna learn. You'll get some on the job training. That's a great way to say it. Here was the next comment that was written. YC founder wrote, we did not do enough research before deciding what to work on. We now realize the more research you do in your space before you write a line of code, the better. It seems like people go to the effort of starting a company, of trying to raise money for a company, of applying to YC with a company, of making it to YC interviews with a company. And we can tell you haven't Googled it. You haven't typed in like the idea that you're working on into Google or read any articles about folks that have tried it before. And this is such a self-owned. It's free to do research on those that came before you and failed. Cost you nothing. Doesn't take very much time. And to spend years of your life or months of your life or any amount of your life on an idea that you've not done just basic cursory research on is really dumb. Do you understand? Maybe you'll do it better or different, but to not even understand what came before you is kind of a willful ignorance. And I don't get that. It's almost like, Michael, do you think it's that they don't wanna know or that they just don't think it applies to them or, oh, this time it's different? Why would you obstinately refuse to research related companies in the past? I would say, one, this is very commonly a young founder issue. And one thing I see about young founders is their internet knowledge doesn't go way back. So I think the first mistake is, well, if I haven't heard of a company trying to do this, that means the company has never tried to do it. I think a second thing that people do is they ask their friends here. This is a situation where Googling is probably a hundred times better than asking your friends because if you're a young person whose internet history is four years old, your friends are probably in the similar position. And then I think the last thing is a bit of a psychological thing. I think that's what you were getting to, which is, if I'm so excited to do this, why would I wanna learn something that would defeat it before it started? Can I live in the illusion and the dream for a little longer? And again, let me be direct on this one. During the dot-com bubble in the 90s, a lot of people started companies and a lot of them tried pretty much every idea you can imagine, right? Every idea that you see today has some analog from the 90s. So dig in, look into it, like see if people have tried this before, right? Same deal, in the 2000s, people pretty much tried every idea. And again, maybe in the example of something like Instacart, people had tried Instacart before and it didn't work, but the founder of Instacart knew that and they intentionally designed it to be better. You understand what I'm saying? Like they stood on the shoulders of those that came before them, smart. Versus if you're the founder of Instacart and you didn't realize that Webvan existed, how has that helped? Like you're not helping yourself to not know about it. Same in the 2010s, think about how many startups we funded that have tried stuff before. And so from our perspective, we see patterns in the ideas people start constantly and we get it, you're better, smarter, faster, you have a better programming language, or whatever it is, you're better. We get a better- Better UI, Dalton. I got better UI. Oh, mobile. I remember in our era when we were young founders, it was like, oh, we're an app, we're an iPhone app. iPhone changes everything, which is both true, but doesn't mean we should have discounted history. Dalton, as you were saying this, something occurred to me. The platforms change faster than the human problems. So like you and I have lived through Web 1.0, Web 2.0, mobile, and whatever the hell you call it- The Facebook platform. Yes, we've lived through all those. But turns out that like, I wanna go grocery shopping, but I don't wanna go to the grocery store. That's been a problem the whole time. Or I wanna get good food delivered to me in where I am, so I don't have to go get it. Same human problem the whole time. I wanna get a job. Same problem. And I think that's maybe the logical reason why you should do the research, because it's almost guaranteed you're not solving a new problem. You're just using a slightly new technique or a new technology or something new to try to attack an old problem. Let's study how everyone else tried to attack the old problem. And it's weird because sometimes, rarely, but sometimes you're doing something on the internet that hasn't been done on the internet before. With Justin.tv, live video hadn't really been done on the internet before. What was interesting was, almost inadvertently, we got to learn about the old way, because we started getting a lot of press coverage, and we started getting a lot of these old-fashioned video guys doing live video news coverage of us. And we would see them with their van would pull up, and it's like, we beam this from the camera to the van to the microwave thing on that hill over there. It's got to all line up. And we're like, oh shit. And that was like state of the art. And so to me, it's like, wow, watching that, we were like, well, you know, our thing isn't as good as theirs, but it's way easier than having a van and a microwave dish up on a hill. Now let me play devil's advocate a little bit. Dalton, I have an expert advisor. I have an angel investor. I have a seed investor. I've got a series A investor. They're the experienced ones, and they believe they're working with me. Like, isn't that validation enough? Don't they, didn't they do this research? Kind of, I mean, let's go to this two ways. One, it's best to do your own work on this, because ultimately you're responsible for your company and it working or not. And this is what I tell people in the batch. You know, I'm like, well, just make sure, you know, you have to live your life. So if your startup doesn't work, it's not really my problem, you know, like I'll be okay. And so feel like you've done all of the diligence and research and you know the risks of what you're doing. But you know, to the extent I have relevant advice, it could be helpful. I think the other thing is sometimes experts can be too biased positively or negatively based on a small dataset. So if you're working on a startup idea that someone had either personally worked on before or lost lots of money investing in before, they're gonna have opinions. In my case, you know, media and entertainment startups are really hard. So I, you know, I know a lot about them. I can advise people on them, but I'm not usually the most optimistic on that startup idea. And then, and so when you're talking to experts, just make sure you get a wide variety of them. I think would be my reaction to your pushback and synthesize them. Just in the same way I said earlier, it's good to listen to lots of different kinds of music to synthesize together. I would just be synthesizing a lot of different opinions or a lot of different pieces of history as you're forming an opinion. You know, in the Brex example, they went and spoke to every person that ever tried to start a challenger bank before. And guess what they all told them? They told them two things. One, useful information that they wrote down in their notes the founders of Brex did. And two, they told them, don't do this. Are you crazy? So the Brex founders ignored that part, but this is similar. When you speak to experts, you just need to know what bits and pieces to draw from what they have to say, then to blindly accept what they say as facts. And that includes us, totally. Right? You know, I think you brought up something so counterintuitive about investors. Like I get so many emails from people saying like, I'm doing social this or live video that, can you help me? And like, I'm one of those people who's like, wow, I took a lot of hits during my social media live video days. Like, I think sometimes counterintuitively, investors who know slightly less about your space can be a little bit more grasses greener, like optimistic than folks who know more about your space. And I think that's not something that I realized. I don't think that's something that's obvious to founders. I think that like people assume expertise equals optimism. Yeah, right? Haven't we observed the opposite of that? Yeah. I mean, yeah, there's something nice about not knowing much about something. It's much easier to see it as a simple question or a simple problem. Like imagine asking the founders of DoorDash about food delivery and what they would have to say about it versus me. Versus a customer of food delivery. Yeah, exactly. Yes. Yeah.