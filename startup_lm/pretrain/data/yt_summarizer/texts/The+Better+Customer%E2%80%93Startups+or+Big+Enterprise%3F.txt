I just wanna turn my startup into like a real-time strategy game where I can sit at my computer and click on things and watch numbers go up. If I can do that and just sit on the couch and have people bring me food and I click things, we're in good shape. Hello, this is Michael with Harge and Brad. Welcome to Inside the Group Partner Lounge. As Y companies and group partners, we find ourselves often repeating the same advice over and over again during our office hours with the startups we work with. For COVID, we'd often gather together in the Group Partner Lounge, the YC office, to try to figure out why this was the case and how we could help startups figure it out faster. And today, we're gonna talk about when is it a good idea to sell software to startups? Harge, you wanna set this one up? Yeah, so I think especially amongst YC companies, selling to other startups has been a formula for success. So some of our top companies, like Stripe started out being just a payments processor company for other YC startups for a long time. PagerDuty, one of the first YC companies to go public. All of their early customers were other startups. And even when you read their S1 filing, when they went public, they were still referencing lots of those startup customers years later. So it's clearly something that can work really, really well. I think the interesting thing though is when it doesn't work, right? Like when founders are kind of maybe cargo culting, not understanding why these folks do this, what do you think about that, Brad? Yeah, so people have seen that those companies started off selling to startups and assume that they should do the same thing too. But it's not always the best move for them. And there's a whole lot of reasons why companies think that they should be doing it and it's not the best move for them. I think the first one that I see all the time, and Michael, we've worked with some companies together that did this, where their product naturally should be sold to bigger companies. Those are the only people that want it. But the sales cycle seems really long. And so they're worried that if they just try going after those big companies, they won't get any traction and the company will never take off. And so therefore they should try selling this very enterprisey product to startups. This one is so painful because we will see a founder who worked in some large company for three, four years, who saw a problem in that large company, who has a ton of insights on how to solve that problem for a large company. It's a problem that tiny companies don't have at all. One of the core reasons why we funded them was because they have this experience and they understand large companies so well. And then in the first office hours, it's like, oh no, I'm gonna sell this enterprise-grade alerting dev tool system that is really only useful when you have over 500 engineers, but I'm gonna try to sell it to startups. And you're just like- For $100 a month. For $100 a month, yeah, yeah. And three startups wanna talk to me about it. So that's evidence that it's solving an important problem for them. And I don't know about y'all, but that's always that office hour, I'm just like, oh no, please. Like, how do I get you to not think this way? And there's like classic examples of this, right? Like if you look, you know, companies that went public even recently, like Snowflake. Like Snowflake's basically a company, you only need that product if you have like massive amounts of data sitting in warehouses, right? Like if you tried selling Snowflake to a startup, they, you would just waste your time. I heard a story, I remember about Workday, like big HR company, and apparently like, you know, all of Workday's early customers were doing like six, seven figure deals with them because you only needed some big comprehensive HR suite if you already had like hundreds of employees. Two amazing examples. You know, the other lie that I see early stage companies telling themselves is that it's going to be easier to sell startups. Like it's gonna be easier. And I always try to push back on that and say, why would it be easier to sell to a customer who doesn't have the problem than to sell to a customer who has the problem but takes a long time to make decisions? Like I understand it would suck to sell to a customer who takes a long time to make decisions, but it only seems like it would be worst. Like the only thing worse than that would be to sell to someone who doesn't have the problem at all. Yet a lot of times founders are not seeing that weird horrible path they're walking. It's the same thing with the last lie where just because someone's willing to talk to you at all doesn't mean that that's an easier sell. And so yeah, people confuse, oh, these other startups, they're willing to talk to me about this problem even if they don't actually have it. Therefore I should be selling to them. I think even it's interesting. Like I think, so another version of that is let's assume the startups do have the problem. I think a sort of a lie or a mistake founders will sometimes make is they'll assume that the startup's an easier customer than the enterprise customer that, oh, there'll be like lower maintenance or they'll just, you know, won't be so demanding. And I think there's a grain of truth to it. You know, like sometimes you have to jump to like enterprise companies make you jump through more hoops and fill out more forms and, you know, to get onboarded. But like once you're actually got someone who's using your software, there's not that much difference. Like the end user can be just as annoying and just as high maintenance and be bugging you every day. Whether they're like working at Microsoft or they're working at some small startup. And what's funny is that when that end user's at a big company, they're probably paying you a lot more money. So you can like, you know, afford to support people to reply to them. And you can like, yes. Startups can be super demanding and not wanna pay which is a great combo. You know, the other one I was thinking about a lot is we have a lot of YC companies that think, oh, I'll sell an early stage company and then they won't churn as that company grows. But what's interesting is like in some categories, it's almost assured. You mentioned HR, like almost every single early HR company gets churn, like all their customers churn as they grow. You know, another classic example that we talked about before was Heroku where like all the customers churned as the companies grew. So like, just cause you get someone early doesn't mean they'll stick, right? Not at all. And I think that's the number one aspect of this selling to a startup strategy where companies fall down, right? Like if you do have a product like Stripe where you can actually just grow with the companies, they never churn. It's a fantastic business model. Like you get businesses like cheap when they're like two people and they stick with you when they're like thousands of people and doing like billions of dollars in revenue or like awesome. But yeah, I think that you have to be thoughtful about is that actually gonna happen or you're gonna end up more like a HR system or a Heroku type product where the company hits like 500 employees. It's like, well, you're no longer working for, like this doesn't work for us. We need something brand new or we need you to custom build something. And then you sort of, either your choices are let them go or become like a sort of outsourced dev shop for some big enterprise customers. Yeah, and what's happening there is the buyer is actually changing, right? So I'd see this with my startup, Perfect Audience, where early on we could sell the startups because it was just like the founder or one of the, like a marketing person. But later once it's a marketing team, once things have changed there, they need a totally different product. And it's the same with Heroku. Like early on, the dev team is small. They have certain requirements, certain constraints. But later when the organization's a lot bigger, those constraints just become too much and they can't just use something like Heroku anymore. As I said, we had the same thing with TripleByte, where like we were building software to help people screen engineers. And the first version of it was a highly technical product that was built for engineers to screen other engineers. And it worked great when our customers were startups because the user was always like a CTO or the technical founder or sort of like another engineer. But every company eventually hires a recruiter or a recruiting team. And that team's completely non-technical. And it was basically like we had to build a brand new product to work for them. Because it was, it was like completely different end user. Yeah, and maybe what we're getting at is that like with Stripe, they don't have to build a brand new product because it's doing something that companies just don't wanna mess with, right? Like payments. Whereas this other stuff, like you're gonna be recruiting in-house, you're gonna be doing marketing in-house, you're gonna be doing HR in-house. Yeah, I was thinking CRM kind of falls in the same category where like startups will pick any kind of lightweight CRM. And then the second VP sales wants to scale a sales team to 500 people, Salesforce. Like it's always Salesforce, you know? And that's such a tricky thing for founders to realize is maybe a lot of these have to do with the fact of like when something scales with people versus revenue, right? Like HR tools scale with people, CRM scales with people. Whereas like, you know, payments doesn't really scale with people. In the same way. So I don't know, maybe there's some insight there, but certainly there are certain categories that just religiously will churn out early stage products. But maybe the last one on this front are lies around sales, right? And I think that's the deadly one, right? What do you think about that one, Brad? Well, sales is scary. If you're someone that has more of a product background and you find yourself building a software product that's for businesses, you just might not wanna do any selling. And so the fallacy, I would call it like the civilization fallacy where you think I just wanna turn my startup into like a real-time strategy game where I can sit at my computer and click on things and watch numbers go up. And if I can do that, like I'm really good at playing civilization. If I can do that and just sit on the couch and have people bring me food and I click things, we're in good shape. But the reality is like you have to go sell people and you have to change people's behavior and you have to go like influence them and get them on your team and get them excited about your product. And that's sales. And so a lot of times I think when startups wanna sell just to other startups, it's because they are afraid to do the sales and they think that this would get them out of it. Yeah, I love that one. Like, you know, we'll talk to an early stage company and their whole kind of sales strategy will be put a self-serve flow and wait. And, you know, it's like, you know, MVP, self-serve flow, dot, dot, dot, riches, you know? Plus some ads. Oh yeah, maybe some ads. Yeah, yeah, yeah. Buy some ads. Maybe some press, maybe, you know. And I just love the dot, dot, dot part. It's like clearly that's all you need, right? Yeah, we see this happen a lot during batches, right? Cause it's like, hey, like you need to go out and do sales. And it's like, well, like I've got all these other founders who are in my batch who I interact with every day anyway. So like, it's no extra effort for me to just drop in, like, hey, like, do you want to try out my product? But it's like, that's a perfectly fine place to start. But it's like, that's not, there's so much of sales. It's like, how do I get anyone to know who I am? How do I get to reply an email? Like, what's the right messaging? And you just like lose all of that when you just ping the people that are accessible. Yeah, and this is a pretty basic thing, but it's just important to state that what you build is just as important as what you build to get customers. And a lot of startups don't understand that. And just building a great self-service interface is not necessarily a strategy for getting customers. And you've got to have that figured out, I think, in order to build a big company. Now, let's talk about the flip side here, because as you said in the beginning, Harj, selling to startups is one of the core strategies that YC companies have employed to create billions of dollars of value. I would argue it's one of YC's superpowers. As you join YC, you've got literally thousands of potential startup customers you can sell to. So let's talk about how selling to startups can be a powerful strategy. Are there any kind of examples here? Yeah, I mean, one that springs to mind is, I think of Gusto, a payroll company that YC funded is doing tremendously well, right? Like, I think they started with startups and they became like the de facto payroll provider for YC companies. And used that actually as sort of like a bridge into the SMB market, just the broader small business market, huge market in America. And that's where they found the sweet spot. And my sort of impression from the way they operated is that although sort of traditional SMBs are different businesses to startups, like the product, the software is very similar. And so they could basically train themselves, build a really great product, build a really great user experience with startups, into like the SMB market with a product that was already really great. I think another example here is that when selling to startups creates a path to the large enterprises. And so, when you think about when AWS first came out, Amazon didn't have the kinds of relationships with large companies than Microsoft did. So if they want to eventually become the product that those large companies use to bring their compute to the cloud, how do they penetrate those markets? Well, it turns out selling to a bunch of smart engineers at startups, those made they loved was a great strategy. One startup started getting growing on it. Two, those engineers might go from a startup to a larger company and like AWS and try to bring them in. And three, they were just training this whole group of people on how to use cloud software. And like, that was a big, big, big avenue into the enterprise that like they had to invent because they couldn't walk the Microsoft path of just call up everyone who uses Office and say, do you want to use my cloud computing thing too? I think there's a really important point about that, which is so that I think that's become known as the bottoms up sales strategy has become quite popular. It's like, hey, like you get the developers, you get people to be evangelists and then they help you make the sale. And that is true, but I point that people forget is that those companies like the AWS or Stripe, who's another popular example for that strategy, they still end up building like real enterprise sales teams. Like this is supposed to be like something that gives you like a booster. It helps with those efforts. Like it's a real, like a really smart strategy, but eventually you still have to have someone that's making the enterprise sale. It's just like, hopefully now they can say, look, you're like your whole development team's already using it. They already advocate. It's like, you really should get this sale done. It's not like Walmart's just going to like walk into your self-serve flow and like. Yeah, they don't just sort of magically one day switch themselves on because like some of like their engineers said that they should, right? You're going to have to make a sales deck. So let's wrap this up. What is the big takeaway here on when it's a good idea to sell software startups and when maybe it's not? The biggest picture way I could frame this is that you have to know which game you're playing. And so it's absolutely reasonable to have startups as your first customer. If you're, hey, my game is I'm playing the Stripe game, which is I'm going to get these customer companies when they're like two people on an idea and the product's going to stick with them all the way through to like IPO and billions of revenue, right? Or you like some of the other things we said, hey, like, you know, I'm going to be like Gusto. I'm going to use startups to build a really awesome product and I'm going to take that product and launch it in different markets. But the key thing is you have to know that you're like the game you're playing and how selling to startups fits into that. Right, like the game of I'm going to sell to big companies by first selling to people that have nothing in common with big companies. That's not a good game. And I think what's funny about this and my kind of final takeaway after talking to so many founders is these games are out there. Like you don't have to invent this stuff. Like, you know, you can actually try to understand the difference between Gusto, AWS, Stripe, and you can copy their strategies, which is very different from product where you really do have to do a lot more innovation. And so oftentimes my best advice to the YC company is like, all right, which of these paths do you want to go? Who is the company who's nailed that in the last 10 years? Go study them. Like learn everything about them. You don't have to learn all the hard mistakes that they did. You can learn from them. Awesome. Well, Brad, Harj, great to see you both. Thanks. Thanks guys. Bye. Bye.