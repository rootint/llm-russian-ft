In a moment, I'm going to introduce our first keynote speaker, Justin Kahn. Justin is the founder of three YC companies. He is now running a company called Atrium, which you're going to hear about later this afternoon. But before that, he was the founder of Justin.TV, and he actually presented up here on this stage eight years ago, back when he was running Justin.TV. And he's going to tell you some really awesome stories from what happened back then and talk about why you should or should not work for a startup. So please welcome Justin Kahn. Thank you, Jared, for giving away my talk. It's me, Justin Kahn. I am YC's remedial student. I had lost track, actually, of the number of times I'd been through YC until Jared reminded me. Three times, actually, four at least. And some of those companies worked, some of them didn't. And my newest company, which went through YC in the last batch in winter 2018, is called Atrium. And one of my team members will be up to tell you about that later. But what I want to talk about today, and it was supposed to be a surprise twist but no longer is why you should but also why you shouldn't join a startup. And I'm going to start with why you shouldn't join. Okay. There's a couple reasons. And my goal here is just to give you the most unfiltered, raw feelings that I have to help you make an informed decision. But there's lots of good reasons why you shouldn't join a startup. Number one, the management at startups generally really sucks. I wish I was joking. But no, it's true. I used to joke that there were YC companies. There were two kinds of YC companies. There were the rocket ships with bad management, and then there were the other companies with bad management. And as kind of a corollary to that, it is likely that if you join a startup, especially in early stage one, you won't necessarily get enough mentorship or direction on what you're doing unless you really actively force people to give it to you. Second reason. You are likely to not actually get rich joining a startup. It's statistically improbable that if you think you're going to join a startup and then be set for life, that is unlikely to happen. So that would not be a good reason to join. I'm sorry I ever told you different. And then the third reason, which I think is a new reason in Silicon Valley, actually, is as Silicon Valley has matured in the last ten years since Jared and I have gotten here, one of the things that I think has changed is people, you know, originally when I got here, I think people just wanted to work on interesting shit, and it was a much smaller number of people. Now I think that there's a lot of people who come to Silicon Valley because it's a great career and there's a great trajectory and there's stability. And if you want, like, those things, you should not join a startup. You know, I've noticed more and more people, even people I've recruited more recently, coming in and saying, you know, what's the career pathing here? What's the, you know, what's the five-year plan? And I'm like, we don't have five years of money. So if you want stability, I think you should go join Facebook. Maybe not today, but next week, next week. All right. So now on to what you really came for, which is why you should join a startup. And I, when I was writing this in the parking lot five minutes ago, identified three reasons. All right. Number one, you will get access to jobs that you're completely unqualified for. And you might not be able to do. So my example actually comes from that very first work for a startup eight years ago. You know, I was on stage talking about Justin.TV, and we actually recruited someone from that, and his name was Guillaume. He was a, from France, programmer. And actually, he came to work for a startup and got two offers from two different companies. One was Justin.TV, and one was actually Scribd, Jared's company. And I sat down with Guillaume, I remember, in a coffee shop after work for a startup, and he said, oh, I have this offer from Scribd. And I said, what was it? He told me. I was like, I'll pay you $10,000 more right now to sign this instant. And so he accepted. Sorry, Jared. He accepted, and he joined Justin.TV, and within a year, he was running our entire Rails back end for a site that was, like, a top 100 site, and I think a top 10 to 20 Rails site at the time. It was, like, in 2010, so the bar was a lot lower. And that was a job he was, like, completely unqualified for, and he would never have gotten the opportunity to do if he didn't join a startup where we didn't really have anyone else to do it. And he went on, actually, this is a pretty cool story. We spun out a company called SocialCam a couple years later, he went on to be the cofounder of that company as we spun it out at Justin.TV, went through YC, and got an even greater scale challenge when they scaled to, like, from zero to 128 million users in, like, two months. And so, you know, just the rate of learning for him was, like, pretty incredible, and he's gone on to now he's a cofounder at a company called Triple Byte that does recruiting for YC companies and others. Okay. So that's number one. You are going to get access to jobs you are not qualified for. Number two is joining a startup is a really good gateway to starting your own startup, if that's a goal of yours. In the second work for a startup, we in 2012, I came back with another company called Exec, and I recruited someone else, actually. Someone really talented. His name was Finbar, and he was an engineer at Groupon at the time. And I think he really wanted to break into startups with the idea of eventually starting his own. And I think one of the things that's really important is to just put yourself in positions where you're around people who want to do the things that you want to do, or people who are like the person that you want to become. One of my cofounders of Twitch, his name is Emmett, always told me that, you know, you are the average of your five closest friends. He wasn't talking about just me, he was talking about everybody in general. And I really think that's the case. So Finbar went on, he was like, you know, working at Exec, that company didn't work out super good, but he ended up meeting a cofounder there and starting a startup, which was a horrible idea. It was a terrible idea, I told him not to do it at the time. But he ended up getting a start, right? He was like, he became a founder, that didn't work out, he ended up joining YC for, I think, just over a year, and then started a new startup that just went through YC, and is off to the races and doing super good. I won't give away that, it's called Shogun, you should check it out and probably work there. Okay, so starting your own startup, that's the second reason. The third thing is to maximize your, I should slow down, I still have a lot of time, sorry. The third thing is to maximize your own speed of learning. I think this is actually the most important reason why you should join a startup. And I have kind of two examples of people who did that working with me. And they are both the two cofounders of Cruise. And I think that they're cool examples, because one is kind of maximizing learning on the way up, and the other on the way down, and I'll explain what that means. So the first cofounder of Cruise, his name's Kyle Vogt, we recruited him at Justin.tv in the early days. He was an MIT student, and we had found him, and he was kind of this person that we thought we needed, because he was a hardware hacker, and we thought we were going to build a hardware company. And so we convinced him to come out from MIT for his month-long break during January, and we bought him a one-way ticket, and we were like, just work for a month, and then we never bought him a ticket back. And Kyle basically became our VP engineering. And he became a cofounder, actually, in the VP engineering. And Kyle's an amazing hacker, he always has been, very amazing tinkerer, and one of those people with a can-do attitude, if you're like, hey, let's build this thing, he's going to go figure out how to build it. But he didn't know jack shit about scaling systems or building scalable system architectures. And so that was, like, the job that was available, though, as soon as we stopped, we figured out that we should not build hardware, and so that's the job we kind of assigned him, and he had to figure it out really, like, on the fly. And so he ended up, you know, packing this live video system, there was nothing kind of, there was, like, no precedent, right, we basically built this scalable dynamic live video system that he engineered and architected, mostly badly at first, actually, and it would go down all the time. We ended up, there was this one kind of funny story where, you know, we had no idea about, we had no idea how to build reliable systems, and so every time it would go down, we would, like, call him, which was, like, every, like, 36 to 48 hours, and so he could, like, never go on vacation, which was, like, not really acceptable to him, so it was just, like, one time he was just, like, I'm going, goodbye, basically, and we're, like, no, what's going to happen if you're, like, not around? He ends up, he went to Tahoe or something like that. We ended up, of course, like Clockwork, after, you know, 36 hours, the site went down, and we had no, we were calling him on the phone, like, 10 times, it's a live video site, so if it doesn't work, it doesn't have any value, right, like, just right then, so we started calling him, and he didn't pick up, luckily, he had left the address, we ended up having to order a pizza to go to his house to read a message to him, like a pizza delivery driver, read the message, like, answer your phone, the website is down, so, like, that was, like, our concept of, like, a pager system at the time, right, so really figuring everything out, you know, one step at a time, kind of inventing everything from scratch, the end of the story is he eventually architected this live video system that by the time Twitch sold to Amazon in 2014 was the fourth largest bandwidth consumer in North America, 15 points of presence around the world, did 90 petabytes of data transfer a month, and so, you know, I mean, his rate of learning was incredible as a software architect, and obviously kind of went on and took a lot of that to Cruise, which is also an incredible story. The other cofounder of Cruise was my brother, Daniel, who met Kyle, actually, as an intern at Justin TV when he was a college student, we recruited him, not really recruited, it was more like nepotism, I'm sorry, I hope he's not watching right now, that's fucked up, that's fucked up to say, so, no, he was, he also had a, like, crash course in startups over the next couple of years, didn't work for me for very long, but when he did work for me, he recruited these guys to the site, I remember Justin TV when we were doing, like, the kind of live streaming site, he recruited this unknown band, it was called the Jonas Brothers, and they ended up, like, crashing our site, I mean, they were part of the reason that Kyle hated his life, ended up crashing the site over and over again, but the cool thing was he joined as this intern, he got to, like, you know, interact and kind of, like, make a deal with, like, what was basically, like, became the number one kind of teen band at the time in 2007, and then later on, you know, he joined me as a co-founder when I started this other company, Exec, in 2012, and the cool thing, you know, I mentioned that, you know, Kyle's kind of the example of, like, how you might learn at a startup as the startup's growing and on the way up, I think Daniel's a perfect example of how you will also learn and maximize your learning if the startup is completely and horribly failing, because we, in 2013, by the time we had worked on Exec for a couple years, we realized that the home cleaning business is not a great business, I recommend you don't join a home cleaning startup, and he, we ended up trying to sell it, and this is a great story, this is my last story, this is a great story, so we were trying to sell it, we ended up negotiating a deal with a company called Handy that's in the East Coast, and against all odds has survived in this industry, and we negotiated the deal, and, like, it was taking forever, there was, like, tons of lawyers, it was dragging and dragging and dragging, and I was so burned out, I was just like, I'm going on vacation, Daniel, you have to deal with it, it's not a very responsible thing to do, but, and so he ended up having to be the one who closed this deal over the next, like, month while I was in Thailand, I mean, I was, like, kind of doing stuff on the phone, but he was mostly, like, running this deal for not a lot of money, you know, just a bit of stock from Handy, and he ended up, like, it was, like, a horrible experience, he learned all about, like, negotiating, you know, from, and when you want to have leverage in a deal, when you, you know, when you should, like, all the things, all the different minutiae of negotiating a deal, and he learned it on this very small, horrible deal, which we were mostly trying to offload because we were so burned out, we wanted to get out of the business. Two years later, fast forward two years, he had become a co-founder of Cruise, Cruise had built an amazing technology team that was executing super well, and, you know, you guys know the end of the story, they ended up selling to GM for a billion dollars, and he applied, the cool thing, I think, is that Daniel applied all of those horrible lessons he learned from, like, trying to negotiate this shitty, piddling deal for our company to his next company, and ended up, you know, they sold it for over a billion dollars. So you're going to learn something. Whether the company succeeds or fails, you'll probably walk away with something valuable. The last thing I'll say is that the way I think about it is, the way I think about growing, and, like, your speed of learning, maximizing your speed of learning is from a quote that our YC partner, Paul Buhite, has generally said, I think he says it to every batch, which is that, you know, it's not your Y intercept, but it's your slope that's important. And so I think you want to, you know, the way I've always thought about it is how do I figure out ways that I can put myself in the position to maximize my own personal rate of growth and rate of learning, and I suggest that you do the same, regardless of whether that's at a startup or not. All right. Best of luck. Thank you. .