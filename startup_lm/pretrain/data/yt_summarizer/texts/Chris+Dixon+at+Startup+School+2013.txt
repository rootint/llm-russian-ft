So, today I'm going to talk about good ideas that look like bad ideas. So, there's a great, whoops. Sorry, my clicker's not working. Uh, I'm sorry, technical problems. There, okay, thanks. Whoops. So, there's a great PG blog post where he talks about, Peter Thiel came to talk, and he said that basically there's two kinds of ideas, sorry, that there are good ideas and there are things that seem like bad ideas. And most startups are in the sweet spot in the middle, which are good ideas that seem like bad ideas. So, today I'm going to basically expound on this idea a little bit. So, why good ideas look like bad ideas, the intuition is that good ideas that look like good ideas are already being worked on by academics, governments, and most of all, large companies. So, for example, I want a, a smartphone that has 10X the battery life and a better screen and more apps and everything else, and Apple and Samsung and everyone else are hard at work on that. So, sort of by definition, you know, we investors and entrepreneurs are kind of in the business of the leftovers, or the things that everyone else thinks are bad ideas, but that we think are, you know, we discover are actually good ideas. And I'm going to give some, so let me start with some sort of high-profile historical examples. So, it's hard to sort of imagine this now, but back in, I think it was 98 when Google first launched, they were actually very late to the search engine world. At the time, the search was dominated by large portals like Yahoo and Lycos and Excite, and they actually thought of search as kind of a loss leader. Their real business was being a portal and putting display ads everywhere. In fact, if you go back and look at all of the literature at the time, people, sort of the, you know, the press reports and things like this, everyone was talking about stickiness. Stickiness was kind of the key, and it was like, sort of today, it would be like virality or whatever, some of the sort of things everyone's trying to have. You wanted stickiness, meaning people stuck on your website so that you could show them more ads. Google was the opposite of it. It was so incredibly good at finding the right search results that people would immediately leave the website, and in fact, there's a famous anecdote where the Google guys were trying to, when they first started off, trying to sell their technology for like a million dollars to one of the large portals, and the CEO of the large portal tried it out, and he's like, this works too well. The problem is people are gonna leave my site. Can you make it work less well and like actually give me bad results? It's a true story, and so the point is that Google came in. I mean, obviously, Google had an amazing technology, but in some ways, their insight was actually this very contrarian business idea of getting people off the website, and no one had any idea how they'd make money. I know one VC who went to visit the house that the Google founders were staying. They were working at the garage and actually snuck out the back so he wouldn't have to meet somebody who was working on a search engine because it seemed like such an obviously bad idea. Another good example here is Airbnb, which we all know now is one of the great successes of sort of the modern startup era, and of course, came from YC. Airbnb, when it first started off, seemed to most people like this kind of weird, niche, kind of hipster activity, something that maybe you'd see in like The Mission or Brooklyn or something like this. Who's gonna stay on someone else's couch? And lots of great investors and sort of industry observers who've been very smart about things all thought this was sort of this weird, niche behavior, and it's, jury's still out, but it seems as if it's on its way to being kind of almost a replacement to the hotel industry. eBay is another one, which maybe this crowd is a little bit going back in time, but it's sort of hard to imagine now, but when eBay first came out, the internet had just started, it'd just been invented a few years ago, or at least been commercialized a few years ago, and sort of to most people, it looked like, why would you wanna go and take stuff out of your attic and stuff you'd sell in a garage sale and sell it online? Like lawn gnomes and all this kind of stuff is basically, so it seemed like, one, to be kind of a niche, weird behavior, and two, by the way, that was before there were kind of these modern ways to do online payments like PayPal, so you literally, like, the idea was, I'm gonna put my lawn gnome on the web, someone across in Florida or something is gonna buy it, and they're gonna send me a check through the mail, right, which just seemed kind of like a preposterous thing, and actually, a funny side anecdote is that the founder, Pierre Omidyar, was sort of a hobbyist who had a bunch of different interests, and when he pitched VCs, he was just showing his sort of personal homepage, and one of his interests was the Ebola virus, so from what I've heard from the VCs, the pitch was, you go to his site, and there's Ebola virus, and then eBay auction websites, so you can imagine how that was received. So then the question is, if, yeah, so how do you develop a good idea that looks like a bad idea as an entrepreneur? And the answer is, you need to know a secret, and by secret here, I mean secret in the kind of Peter Thiel sense, if you've read his, those great class notes, Blake Master's class notes about the course he taught, which he defines as something you believe that most other people don't believe. So then the question is, how do you develop a secret? And I think there are a few ways, and I'll talk about them here. One of the ways is to know the tools better than anyone else. Usually in our business, in sort of the software business, the tools means knowing computer science and technology better than anyone else, so an example here is Dropbox. I actually knew Drew, I started, my first company was in Boston when he was in Boston, and I actually was trying to recruit him for a long time, because he was a great, obviously genius, and he, I remember he came and he was like, look, I want to do a cloud storage thing, this was like, I forgot, 2007 or something, and at the time, actually cloud storage had been a big trend in venture capital, and so I remember looking with him at like a TechCrunch article that was like, literally like 100 cloud storage companies had launched in the last two years, half of whom had been venture funded, and just sort of if you step back and look at it from this big picture point of view, it seemed like a crazy thing to do, like to enter such a crowded market. I think my take on it is what he realized is that, so if you actually use that software, the other, the competitor software, it was like this totally janky web thing, and you click on it, and you wait 10 minutes, and you download the file, and then you have to upload it with all, it was just totally like, and it was basically made by business people who were like cloud storage of the future, and what he realized was that, to do it right, you had to do like, it had to feel like it was a local hard drive, which of course we all know from the way it works now, which is actually a very non-trivial technical problem, to do it reliably, and you gotta do the NAT hole punching, and the syncing, and taking care of all these adverse conditions, it turned out to be actually like, it made sense in the end that sort of an MIT brilliant engineer was the one who kind of cracked that problem. Another way to know a secret is to know the problems better than anyone else. So an example here is Kickstarter, most people who, probably most of you first heard of Kickstarter probably around 2010 or so, when they kind of got big, the founders were actually working on the idea for about 10 years, and trying to raise money, the founder CEO, Perry Chen, he actually came from kind of the artistic community, he was kind of one of the people that would be doing a project today on Kickstarter, he was living in New Orleans, and at one point wanted to put together a music festival, and had a bunch of people who wanted to go to the music festival and were willing to pay, had musicians who were willing to play if they could do it, and had no way to coordinate the two, which as we know now is sort of what Kickstarter does, he also was aware of being deeply into that community, was aware of sort of the history of it, all going back to like Renaissance Italy, of like sort of a patronage model for the arts, and just sort of understanding this was a normal behavior, both among the kind of backers and the project creators, but many, many people whose job it is to identify good ideas, thought this was a very bad idea for a long time. So another way to come up with a secret, is to draw from your own kind of life experience background, I'll just talk about my own experience here for a second, so I started a company called Site Advisor back in 2004, this is when, this was kind of, I think of that as 2004 as kind of the worst period, at least in the modern, probably ever, I think of the web in terms of security problems, if you remember, for those of you who remember, there was, probably all of your friends were complaining about getting pop-up ads, and they were using Internet Explorer on a PC, and there's just like pop-up ads everywhere, phishing everywhere, it was kind of a mess, the question then was, why didn't all of the incumbent security companies like McAfee and Symantec do anything about it, the reason is that they saw their mandate as being solving kind of technical problems, meaning making sure there isn't an exploit in the browser, making sure there isn't a whatever, an OS exploit or something, and most of the problems that were happening then were what are known as social engineering problems, which means that basically everything was, all of the technical features were operating properly, but users were tricked into doing things, and in fact, so their solution was to put out white papers that said users should be smarter about downloading software or something like this, and so the idea here, so I think where we had kind of a unique advantage is that we didn't kind of come to this from the security world, we came to it from the consumer Internet world, where we didn't sort of see these kinds of religious boundaries between technical and social engineering threats, and saw it much more as a consumer Internet person would, as let's just try to create a better user experience using whatever kind of means necessary, and it's funny, because we went and talked to, and a lot of our investors went and talked to people at the incumbent security companies, and they all said it was a terrible idea for the reasons I just said, and I remember pitching, and VCs, I pitched a ton of VCs, and it was this really frustrating thing where it felt like, to us, it was as obvious as whatever, this bottle of water sitting on the table, can't you see this bottle of water, and they were like, no, I can't see, what are you talking about, and like, is it a phishing tool, or is it an anti-spyware, like trying to put you in all these categories, and I've noticed that when you sort of, I think when you sort of really develop a secret, it actually ends up being quite frustrating talking to the people that haven't, because you're just sort of trying to show them what you think is obvious, but they can't see. So, now I wanna talk just a little bit about some of the sort of high-level characteristics of these kinds of good ideas that look like bad ideas. One of them is that powerful people will often dismiss them as toys. So, a very famous example here is the telephone, which basically, when the telephone was invented, the incumbent company at the time was Western Union, who used telegraph systems to, primarily for people like railroads to communicate across the country. When the telephone was first invented, it could only go like a mile or something like this. And so, what the Western Union said is, this doesn't solve the problems of our customers. Also, the idea of voice applications, like what are you gonna do with voice? You can actually go back and, it kind of sounds funny now, but you actually go back and read it, and people are like, what's the point of voice? We already can encode the information in Morse code, and there's nothing else you'd wanna do. And so, they had the opportunity to buy the technology very cheaply and didn't. And, of course, what they underestimated is kind of the classic Clay Christensen thing, where, if you're familiar with his books, Innovator's Dilemma, there's this famous curve, which is sort of the rate at which technology gets better is sort of like this, and the kind of demands on technology doesn't go up as fast. And what that means is that the technology often quickly catches up. And while it's at that kind of low point, it often looks like a toy to a lot of people. A modern example of this is Skype. Years ago, like back in 2003, I had the opportunity to actually work on, as part of a team that worked on one of the early investments in Skype and helped write one of the memos for the investment. And our big, it sounds funny now, but all this stuff sounds funny in retrospect. Our big concern, if you go back, was that most people didn't have microphones on their computers, and would they be willing to drive down to Best Buy? I mean, this is actually in the memo. It was like microphone adoption was the key issue. And so, again, it's like, would people all be willing to go and drive to Best Buy or whatever and do that? The other thing was the quality was lower. Of course, that got better as bandwidth got better. I think that was another issue, was broadband, narrowband adoption. Will broadband ever get adopted? I remember hearing McKinsey, like the head of McKinsey, explained to me that no one would ever adopt broadband or something. So, anyway, so. So, the, so Skype, and the other, actually, at the time, also, if you remember Vonage, Vonage was sort of the one that people were kind of more excited about. Skype also had problems connecting to the POTS sort of telephone system. But you literally, if you go back, you'll see people said it, like all of the telephone incumbents said it was a toy, like using those words. Okay, so another key characteristic of good ideas that look like bad ideas is that they unbundle the functions done by others. So, let me explain this with the example of newspapers. So, one way to think of newspapers is as sort of a collection of functions. There's the brand of the newspaper, you know, if I read the New York Times, I'm maybe more likely to trust it than if I read something else. There's the curatorial function, which is, you know, the New York Times tells you what's important based on what it puts on the front page. There's distribution, you know, prior to the internet, the New York Times would print newspapers and drive around and deliver them. Classified ads, you know, back then, was an important function. And so then, you know, what happened is over time, each of those functions kind of got picked off one by one. So this is important, like it doesn't happen with a lot of these things like kind of in one fell swoop, it happens piece by piece. And so first the internet itself came along, you know, you could read the New York Times online, suddenly what's the point of getting it printed and distributed to you, right? And then, you know, then Craigslist came along and, you know, it's a better way to do classifieds, they're all in the same place, et cetera, right? So that sort of picks off that function. And then social came along, you know, Twitter and Facebook and, you know, just email and whatever else. And suddenly, you know, a lot of people started getting, you know, the curatorial function of like what's on the front page became less and less important, right? So far more people now, you know, what they read, if they read the New York Times, to the extent they read it, that's determined by what's shared with them on Twitter, Facebook, et cetera. So then the curatorial function goes away. And I would argue sort of the last function is starting to go away, which I use Nate Silver as an example, which is, you know, the individual reporters now, because of these other distribution mechanisms and Twitter and Facebook, et cetera, are able to build up their own audiences, which in some ways becomes, you know, the audience becomes more loyal to the individual contributor than to the organization. So an example here are MOOCs, Udacity is what we're investors in, there's also Coursera. So if you read a lot of the kind of, you know, mainstream press about MOOCs, they'll say things like, oh, that doesn't replace, you know, the university experience. And what they're missing is that it's not supposed to replace it. You should think of a university as a bundle of multiple functions. So, you know, it's a social experience, it's a credentialing service, you know, you went to so-and-so school, that's a credential. It's coursework, it's tests, it's maybe, it plays a job kind of recruiting function, right? What you should expect is that the same pattern that played out with newspapers over the last 20 years, I believe will play out in education over the next 10 to 20 years. But you'll see things happen layer by layer. And because it happens layer by layer, all of the kind of mainstream pundits sort of look at each layer and they say, that layer's stupid. You know, it's only one part of it, right? Which of course is the whole point of it, and that's why they dismiss it as a bad idea. So another key characteristic of these good ideas look like bad ideas is they often originate as hobbies. The kind of the mental model I use is that in the startup world, we kind of have basically two constituencies. We have business people and we have technical people. And each of the two constituencies has a method of voting on what they think is interesting in the future. Business people's way of voting is by allocating money at the workplace. So that now includes me as a venture capitalist, it includes the CEO of a company or a head of a department. Engineers, you know, I'm simplifying the, of course, technical business people, but the basic idea is that some of the smartest engineers, they don't get to vote with their dollars, but they do get to vote with their time. And so they vote with their time by working on what they think the coolest stuff is on the weekends and at night. And this plays out, I mean, it's amazingly how predictive this kind of heuristic is, going back to obviously the homebrew computer club with Jobs and Wozniak. Yeah, sorry. So the homebrew computer club with Jobs and Wozniak. Of course, the PC, you know, a lot of the sort of things around the PC originated. Blogs started out as hobbyists. Among hobbyists, the web did. A lot of, you know, both people creating websites and browsers and things like this. So many open source things started that way. You know, so today, if you sort of look around, you'll see people working on, you know, what is it like? I mean, it's you guys, I assume, and it's Bitcoin and 3D printing and, you know, drones and, like, whatever, a whole bunch of interesting, like, you know, big data frameworks and all this other kind of cool stuff. So, you know, this stuff tends to get dismissed as bad ideas by kind of the mainstream because, oh, that's a toy, that's a hobbyist thing, et cetera. So I'll just give you an example of GitHub, which, you know, a lot of, I mean, GitHub, of course, is based literally on an open source project, Git, as you guys know, but also, I think, you can think of it as, one way to think of it is that sort of the work processes that GitHub enables began in the hobbyist, in the open source sort of hobbyist community where you had large, distributed, kind of non-hierarchical or semi-hierarchical groups trying to work together and coordinate and it turns out, I think, well, we believe, we're investors in GitHub, but it turns out that you have a very same kind of work process within large organizations. So if you look at it like an eBay or something, you have people working all over the place, they're semi-structured, need a way to coordinate, so just an example of kind of a tool and a process that began in the sort of hobbyist world and has made its way into the workplace. Another characteristic of good ideas look like bad ideas is that they often challenge social norms. So we talked about how people sort of got that kind of queasy feeling around Airbnb and eBay. I think that it's hard to think about, it's hard to realize now, but Flickr, so Flickr had many innovations, but one of the key ones was that it defaulted photos to being public. So prior to Flickr, there were online photo repositories, but they were all private ones like Shutterfly, where you'd upload your photos and maybe share them with a few friends. And it was really shocking to people that you would go and default them to public, like what kind of behavior is that? Facebook is another good example where, we've seen it repeatedly, where Facebook made various changes to sort of how sharing and other things work, probably most famously with the change to the newsfeed, where there was sort of an outcry and sort of challenged these social norms, but now has become, the things that the innovations Facebook made there have now become mostly just sort of standard UI devices and sort of all modern social software. So to wrap it up a little bit, so how did I learn the secret? Not to be kind of sort of like cutely recursive, but I sort of think of this presentation itself as a secret. The way I learned this was, like with AllSecret, sort of through direct experience, just sort of both being a, both through my own startups, but then through angel investing, I actually went back kind of systematically and looked at all of the investments, both that I'd made, and I probably at this point heard thousands of investment pitches and made dozens of investments, missed dozens of good investments. I went through and kind of tried to look systematically at what the best predictor would have been, and this came out as by far sort of whether the founder had some sort of technical expertise or problem domain expertise or some kind of direct experience where they'd sort of learned the secret. And then just, I guess just wrapping it up, I would say if I were this, I assume a lot of people here are entrepreneurs or aspiring entrepreneurs, I would encourage you to think about, like I think there's sort of two ways to develop startup ideas. One is through direct experience, whether it's direct experience with tools, as I was talking about, like technologies, or direct experience with some problem, or direct experiences that bring you to some perspective, and there's another way to develop them, which is like through sort of abstract things like analyst reports and trends and analogies, I'm gonna do Airbnb for Y or Uber for X or that kind of thing. And I think that in my opinion, the best ideas come from direct experience, not the abstract things. And in fact, sort of by definition, because the abstract things tend to, like if you go read a whatever, an analyst report, the New York Times, it tends to just be an encapsulation of conventional wisdom, whereas the opportunities tend to lie kind of in when you take your direct experience and diff it with the conventional wisdom, that's where the good startup ideas are. That's it, thanks. Thank you.