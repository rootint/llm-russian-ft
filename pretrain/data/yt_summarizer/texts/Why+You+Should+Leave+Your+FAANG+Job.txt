We all know these people that want to just like tell you their darkest secret, which is they wake up every day and they like dream of quitting. Like they have fantasies of quitting every day. Those are people that probably should quit. This is Michael Seibel with Dalton Caldwell and today we're talking about how to break out of fame. I think almost inadvertently, because we talked to so many young technical people, young technical founders and potential founders, we've become experts at career advice and specifically big tech career advice, which I don't know about you Dalton, but it's not an expertise I ever wanted to develop at all. Yeah, I mean I've never worked at a fang. Like this is probably the last thing I'd be interested in talking about with people, but man we get exposed to lots of this stuff. And I think what's interesting is that technical founders often misunderstand the value they can get out of fang. And misunderstand is an understatement. They grossly misunderstand what value they can extract from a fang job and what value they can't extract. I think mostly because a lot of founders are mixed in with other people with different motivations, right? Most people want to be managers or employees. I think a lot of founders have friends who want to be managers, employees, and they kind of like see those people attracted to fang and then they assume all those things apply to them as well. Whereas, you know, as we both know, the founder path is quite different than the employee path. Yeah, it's funny. I remember when I was in undergrad, a lot of the recruiters, the people that had the most recruiters and the best recruiters, tried to create cachet. I remember when I was in school, it was all around management consulting, was the high status, cool jobs to get. And it was a certain kind of person that would like fall for that. That like working at McKinsey or Accenture or something was like the cool thing to do. And what's funny is at the time, Google was like an 80 person startup and they were trying to recruit on campus. But it was like- Nobody cared. Do you want to be different? Like it was exactly the opposite brand of what Google is now. Because it was just kind of a grubby little startup. But the point is, it's easy to look at folks that employ the most recruiters and use that as your basis. Like whoever has the best booth at the career fair, whoever gives out the coolest stuff, and make your selection that way, right? If that's the criteria you use to select what college to go to, which is like, oh, whatever has the best rankings, you look at the best career rankings for where to work after college. And that's going to drive you towards, you know, Google, Facebook, whatever, right? It's not crazy. I get why this happens. And if you want to be an employee or a manager in a large tech company, that's great. Like that's correct. In fact, I'd argue all those guides are written for you. And it makes sense to write guides for you because you're the vast majority of people. The problem is, what should the founders do? What should the potential founders do? What should the future founders do? People that are curious, founder curious people, the people that might want to maybe, they're like, oh, start, I think that'd be cool. What's their move? Exactly. So let's start with some of the assumptions that we hear from these potential slash future founders about why working at Fang right out of college or soon thereafter makes sense. Why it's, and it never, it's never presented us to us as like, it's a pretty good opportunity. It's always presented to me at least as like, oh, of course it's essential. It's an essential part. They state a fact. They're stating facts. We must work. So here's the first one we hear a lot. Before I start a company, I want to get experience working on the hardest technical problems at the largest scale. And Fang is the only place in the world to do this. What do you think, Dalton? That is, that's just quoting the recruiter. You're like, you're like reading the, you're reading what the recruiter's line is. I mean, look, most people that get most jobs at Fangs, when you talk to them after they have the job, if they're, you know, get a couple of beers in them, they're working on some bullshit ad server. They're working on like one pixel on one corner of one thing. They're working on some project that's going to get killed. Like, again, if you're someone that's like a good enough programmer to get hired to work on some deep technical infrastructure at Google, then this line is true. But most folks that I talked to, at least kind of have what is like a shitty job, but that's been presented in brand to them. Branded to them is a very cool thing. And again, this is marketing. Like they want you to take the job. They want you to keep the job. And someone's got to do all of the crappy ad server work, right? Someone's got to. And so if you actually look at the numbers, way more folks that you've meet that work at a Fang that work at a Fang job have the equivalent of like some shitty ad server, like buttons or translating into foreign languages or something, just like the worst job. Android settings page. Then the people that are working on the core search infrastructure at Google, which again, that actually sounds really cool. And that is working on hard technical problems, the largest scale, you know? So I think you just want to be honest about what the job actually is and not just quote the recruiter. Well, and let's be clear. The way that you actually learn what the job is, is you talk to someone doing it. You don't talk to the recruiter. Like, I think maybe people don't quite understand how the entire job of the recruiter and the number one way they get paid, promoted, everything is convincing you to sign up. Yeah, they get comped per person. It's just, it's like a car salesman. They don't make money if they don't sell a car. If you don't sign on the dotted line, they're not getting paid. The next one is, Dalton, and this is a little more vague, like it's going to be easier for me to be successful at my startup. I'm going to learn important lessons I can apply to my startup if I work for a while at Fang, right? Because the lessons I learned at a big company can directly apply to my early stage startup, right? Isn't that how it works? Look, I think in some situations, folks that are really green can learn a lot about working on a team and having a manager, learning about how corporations work, learning about politics. It's a great way to learn about politics. But you'd be surprised at how many founders that we talk to will tell you that nothing they did in their job translates at all to their startup. Like, could not be less relevant versus their college coursework was more relevant. Isn't that weird? And it's because at a lot of Fangs, you have so much tooling. Again, I'm talking about programmers here. But you have so much infrastructure inside of Google or Facebook to do your job, and they have their own way of doing code reviews. There's just all this stuff. So when you start a startup and you have none of it, and you're starting from scratch, you're like, wait, what happened to all those tools I was used to using in BigTable and BigQuery and whatever you had? And you're dependent on those tools, but you're like, and so it's a lot more like doing a college project again, where you kind of have, there's no tooling, there's no infrastructure, you have to create everything from scratch. And so again, what's funny is like, you know, you learn a lot of stuff. But a lot of what you learn is how to use the tools of the Fang, which you don't get to use when you don't work there anymore. Get what I'm saying? Again, this is a very programmer centric point. But like, yes, I've seen founders run into this problem a lot. The way that I would say this slightly differently is that I think when you work on Fang, founders find that there's more they have to unlearn. Whereas like, college wasn't actually set up to help them get products out in the wild. But it didn't give them a whole process that they can't use with their startup. Whereas like in many ways, the big companies give them a whole process that is just completely irrelevant for when you're doing a company. And so you have to unlearn. I've worked with so many Google engineers who are just like, their standard for getting a product into even beta at Google is 10x what an MVP in a startup is. And they just have to unlearn. It's like, can anyone find this useful? Launch. And I've had to fight with founders on that, where it's like, oh, well, this would never, this would never see the light of day at Google. And it's like, yeah, that's not, that's not the standard. Okay, here's another one, right? Well, VCs, they care, right? Like a VC is good. Like, we all know that Google engineers can just raise a Series A, can raise five to $10 billion, like with almost nothing, right? Like, this is my path to getting funded. I mean, it depends on, I mean, certainly depending on your resume, it could, it could be helpful, right? It's a good brand name to have. So I don't think that's false, but I think at some point, the more time you spend there, what was once a good positive signal could turn into a negative one. Again, I can't speak for all investors, but at some point you lose the shininess of getting that validation, as well as what team you're on and all this other good stuff. And so, you know, I think there's some truth to that is what I'm saying. But like, if you stay there for eight years, that doesn't apply anymore. You kind of have to get out to get the benefit of it. I also think there's this weird feeling. I think people will read TechCrunch and see, oh, these Google people are getting funded, and then kind of assume VCs are like walking the halls, like being like, engineer, here's term sheet. The flow that you walk through to work, to like, go to MIT and be a CS major and then get employed at Facebook is nothing like the flow you'd work, you'd walk through to go from a Facebook engineer to raising money. Like, these are not the same flow. And I think people really mistake those. This is one of my big talking points to founders in the batch, which is you don't read about the unsuccessful fundraisers. And so if all you read is the successful fundraisers, it looks like everyone is raising and every Google engineer is raising and every, because we just never hear about the ones that didn't happen. And so don't fall for that. It's not that easy. You can't just wave a magic wand and they're not just handing out, you know, we say this, they won't believe this, Michael. But like, I think people actually think they just hand out party favors or something, you know, oh, yeah, you work at Google, like, yeah. Isn't there a special door at A16, you just walk in that door, present your Google credentials and money, money? Maybe not. Well, that's the thing is there's a lot of Google employees and ex-Googlers now do the math. It doesn't pencil out. Let's talk about the trap, right? So these are a lot of assumptions that future founders have. Let's talk about the other side. What's the company trying to do, right? And I think this is something that I hear a lot where the company is trying to retain you. And trying is not the right word. The company has engineered and iterated a system over oftentimes a decade plus to retain you. And when you sign that piece of paper, you have to understand you're going into the same retention flow or retention flow built by a company that often is trying to retain users on its product. Like it's really good. It's highly gamified. It's highly gamified. Oh, I can get my next level, Michael. I want to get my next level upgrade. And then I unlock my booster pack, founder, blah, blah, blah, share, reward. And then I get level 14. Yeah. And one of the things that I see that founders don't realize is how the fangs will do this around equity. So here's a story that founders will tell me, right? I'm going to get in with some kind of signing bonus. I'm going to feel good. Some kind of sound. I'm going to feel good. Some kind of equity package. I'm going to feel good. I'm well compensated. This is great. And then I'm going to get out. But of course, that equity is vesting over four years, right? Like, you know, you're in that equity a little bit of time over four years. So that's the first part of the trap, right? It's like if you leave, you say goodbye to that money. The second part of the trap is that if you're good six months in, you get another chunk of equity, but it's vesting over four years. So think about it. You've been there for six months, but there's disproportionately more money that you have invested yet, which incentivize you to stay a little bit longer. This is a dark pattern. It's a loss aversion, which is people do a rash. If you give someone something and then threaten to take it away, they will irrationally value it to avoid a loss versus they never had to begin with. They won't do it. Again, you know, Google this loss aversion is a thing. So there's a lot of stacked loss aversion around vesting, especially because founders will think of it as their savings. And this is the second part of the trap, right? You're around a lot of people who want to be employees and managers, not founders. Oftentimes they're upscaling their lifestyle, nicer apartment, car, nicer vacation, because they want to be in this world. They're not looking to save money to start their company, right? And so the people around you start spending money, especially because they see that vesting equity as almost savings. So bam, you're not saving money because you're going on Instagram vacations. Bam, you continue to get these little equity bonuses that vest over four years. If they can keep you spending your entire salary and if they can keep the money that you have invested yet larger than the amount of money that you have in your savings by like two to three X, you never leave. Like your brain tells, like a rational human says, don't leave. Yeah. And again, where's this coming from? We talk to these people and they're like, yeah, I hate my life, but this is the setup. Like they explain this to us as like the reason they can't do the thing they want to do. It's kind of sad to talk to someone who's like, they lay all this stuff out for us and they're like, and therefore, you know, I can never do a startup. Or something. And they're like 25 and it's like, and this is how the math works. I can't, I can't, I don't, I'm not free. I can't do it. In many ways, this is a defensive tactic to warehouse talent out of the fear that maybe someone else can use you in a way that can hurt the company. Whereas if they warehouse you on the Android setups team. Yeah. Think about it. It's like speculative science projects that get axed and that never shipped. Like I saw that Facebook built some kind of Silicon, they built a chip and then they were like, no, nevermind. And like they never shipped the thing that probably people, dozens of people spent years of their life on. I saw that PayPal had some kind of research lab. They just laid everyone off this week. Like basically if you're not on the core thing, you have no promises that your work will ever turn anything. And how bad does it feel to spend five or six years and just, oh yeah, we were in the moonshots group. They decided not to do our thing. They shut down our group. That sucks. And oftentimes that's the thing that got you to sign, right? That was the thing. Oh, like I would have never worked on the normal thing. It was the moonshot. So if you're getting, if you're technical and you feel like you're getting trapped here, Dalton, like how do you know it's time to get out? Like how do you know, like, okay, like, or even if you see a friend in this situation, how do you know it's time to tell him like, Hey, like, Hey, think about breaking up. I think for the people that I talk to, which again, it's, it's probably not a representative set of the average. It's probably the people that are more disgruntled, but to the extent that you have conversations where it's like talking to someone that's like an alcoholic and it's like, I got to stop drinking. Like I can't do this anymore. Again, I'm not even trying to be funny, but it's like when someone's just like, I don't know why I'm doing this, but I'm still doing it. And I can't stop. I hate my life. Like, like if that sounds like you or your friend talking about your job at Facebook, that's probably a good sign. You maybe shouldn't do it anymore. And, and the actual tactical thing you do is keep your personal burn low so that you can do it and not get hooked on the money with all this gamification we talked about and realize you can always come back. If you're a good programmer, if you're a good programmer and you leave and you leave in a nice way, no matter what happens to you, you can come back. There's actually not that much loss you have to take. And so versus the people that are like, no, this is cool. I like my life. Yeah. Stay there. Right. This, this message is not for you, but we all know these people that want to just like tell you their darkest secret, which is they wake up every day and they like dream of quitting. Like they have fantasies of quitting every day. Those are people that probably should quit. And it's interesting because we're probably talking to like 1% of the developers at fan companies, like 1% for like 99% of developers at fan companies are relevant. This is, this is not relevant. Yeah. This is not for you. We're not, we're not trying to argue with you. Right. We're just saying, though, if you know someone that's deeply unhappy because of decisions they're making, they can just make different decisions. You can tell them that you can break the spell. You can break the spell. So to wrap up, right, like the Fang optimization, I think there's a couple of kind of takeaways here. Like, I think the first one is like, if you're technical and you want to be a founder and you decide that Fang is the right part for you, the right path for you, at least to start, a couple of things you should be thinking about. One is how long are you going to stay? Right. Like, how can you stay for long enough to get the value without getting trapped? Because if you get trapped, your plan goes to shit. It sounds like the second one, and you were touching on this, like don't work on projects that will like make you hate your life, make you hate tech, like cause you to decide to just become like a nomad who roams like, you know, weird beaches in Southeast Asia. Like we know these people like. Yeah. Like I know a lot of ex-Facebook people who kind of like feel that they did evil and they made money doing it and they seem pretty unhappy about it. They're not happy about the work that they did in the universe. And so, yeah, don't don't do that. Like the psychic scars of doing that stuff is expensive. Well, and it'll prevent you from being optimistic about tech, which you need to be if you're going to be a startup founder. Like you need to be optimistic. I say the last one is have a plan at the start. Like know what you're trying to accomplish. You're trying to get a visa. You're trying to save money. You're trying to get this on your resume. Have a plan for what you're trying to accomplish by taking one of these jobs and a plan for when you want to leave. It's a lot easier to have a plan when you're not looking a bonus in the eye. Right. If you come in with the plan, when the bonus thing happens, you'll see it coming. If you're fighting the bonus head to head with no plan, bonus wins most of the time. All right. With that, that's how to break out of FANG. Thanks, Dalton. Thanks.