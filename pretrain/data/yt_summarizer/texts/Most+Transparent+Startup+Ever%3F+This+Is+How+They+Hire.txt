Welcome to the first five, where growth stage companies funded by Y Combinator look back on their first five hires. Hi everyone, my name is Anu Hariharan. I'm a Managing Director at Y Combinator and work with our growth stage companies. I'm here with James Hawkins, the co-founder and CEO of PostHog, a suite of open source product analytic tools that companies can host themselves. PostHog was part of Y Combinator's Winter 20 cohort. Welcome, James. Thanks for having me. So James, can you tell us about your first hire? Who was it and how did you decide to hire for that role? Sure. So my co-founder and I were frantically trying to get ready for a launch on Hacker News. We already had this kind of date in mind that was do or die. It's going on the internet this particular day. And we're trying to build this massive product on that day. And we wanted to build kind of libraries that would make our make PostHog work with mobile, with web, with desktop, with a bunch of programming languages. So we hired someone called Marius as a full stack engineer. And we hired him as a contractor to start off with. So we're like, OK, we just want to find someone who can ship a bunch of these libraries really, really quickly. We had a remarkably efficient hiring process. So it just so happened that I saw someone on Hacker News who had launched a product a little bit like ours, but clearly a hobby project during the batch around the time that we wanted to hire. And so I just wrote him an email. Like, hey, we're working on something that's similar to your hobby project, but we're doing it full time. Would you be interested in doing a little bit of paid work with us to build out some of these SDKs and libraries that we need? Sure, why not? We got back from him and that was that. So it was just from watching him do some actual work with us, it was really clear that he was very talented. And that's kind of why we thought, hey, we should just get him in full time. That's great. You know, there's no test like getting them to do the real work because that's a test, especially for the company. But when you decided to email him and hire him as the first contractor, was that even an interview? Or did you just go by the hobby project and you just wanted him on board? Yeah, it was literally straight into a project, which is kind of terrifying, but it was very de-risked. We're only committed to doing a couple of days' work with this person if it doesn't work out. But their work spoke for itself really quickly. So yeah, the hiring time was like 10 minutes to write an email and then we're basically done. If you approached it as an interview, that is what some people do. And in your case, things were moving really fast. And I often tell with startups, every first hire is different. No one has the same journey to the first hire. Now let's talk about your second hire. Who was it? Sure. So this was someone called Eric. And we thought, hey, that contracting thing we did last time works so well to make this feel obvious that we should just repeat it. This was once we'd raised our seed round. We had a bunch of stuff we needed to build. We had tons of issues, loads of demand. So we're feeling good that we can afford to hire someone else. We dropped, just put the company on a jobs board for people looking for all remote jobs. This is, I guess, actually very important. So from very early on, Postdoc has been all remote since we finished the batch. We've been designed to work this way. We're building a kind of very community led kind of product where the community is a bunch of random engineers all over the Internet. And so we thought, hey, if we are kind of building as a community ourselves of engineers all over the Internet, then it'll just kind of mean that we're working with our community rather than being in like a fancy office and then expecting outsiders to come join us. So, yeah, we put ourselves on a remote job board. We put kind of quite a lot of effort into a company handbook. So we wrote out how our whole company works publicly. We made it world editable. We were quite inspired by GitLab and that kind of way of working. So we have a similar feel if you go through our handbook. The actual kind of policies and how we work are very different. But the thing we have in common is a ton of transparency. And for Eric, but also everyone that shows up now, the fact we're willing to kind of write out how everything works gives them a really good sense of what it's actually like working here. Later, we're really big on being asynchronous, giving autonomy, like actual autonomy to people. We have a direct culture, but you can really feel that for real when all of your policies, all of your work, all of your code is happening in public in a way that derisks it, I guess, from an external candidate's perspective. So, yeah, Eric applied on a remote job board, came in. My co-founder and I both interviewed him separately. We both felt this person is extremely smart. We think they're going to be very scrappy, which is what we want. We're now today fiercely anti-manager-y and very pro-scrappy people. And we thought, hey, let's see if he wants to do a paid week of work with us. Asked him to do a paid super week. And then for that week, we would just pick up real life issues that we want to work on. He was supposed to start on a Monday, but over the weekend, he'd already shipped a bunch of stuff. So before he even started, we already knew that we were going to end up hiring this person too. Again, though, this was like a really efficient process. Like he applied for a job we hired. He was probably the only, at least we think he may be the first person we interviewed. But we got lucky with how skilled he was. But the thing that we learned from him as a hire is how important it is to have scrappy and proactive people that can handle autonomy. Eric was the kind of person that you can just mention to him at a really high level, like, I think we should do this. And then the pull request is there the next day for whatever this is. And he's figured it all out and shipped it, which makes him a joy to kind of work with. And that was really obvious through the way he handled the contracting period with us. And so this kind of, we created the concept of like a super week where we started doing this every time. That made it really feel really easy to move forward with him. So you wrote down how you work at Posthog. You were transparent about the culture and the norms. This document, did it exist before you hired Eric? Yeah, quite a lot of it would have done. We did it from basically when we started the company. Early on, frankly, it was probably because we wanted to look more mature from a user perspective. And we're like, well, if we have loads of pages of our website, we'll look more mature. And it also helped us think through our philosophy around what kind of company we wanted to be. So, yeah, it's very extensive what it covers. It covers how when we decide to fire people, it covers how much we pay people. And you had all of this before hiring Eric? Not all of it, but we had an unusually large amount. For example, I think we had transparent pay already planned out for people before he started. So we were probably in the top 0.001% of companies from a transparency perspective at that stage. So it was enough to stand out. Great. That sounds like two fantastic hires. What is your hire number three? Who is that? Sure. So this was a guy called James Greenhill. He was a data engineer at Uber before he joined Postdoc. We found him because he starred our repo on GitHub. So I used to go through every single person that starred our repo for the first couple hundred stars. And I would basically try and buy, especially if they weren't someone that I recognized, I would try and buy them coffee in real life. This is just before COVID. And James was one of those. I was like, oh, someone from Uber has starred our repo. Maybe Uber. I want to just learn from him. Have you used this in production? I doubt it. If you haven't used it, I want to learn what stopped you from using it. So I had a go with him. He was really passionate about the software. And that single click on a star button, of which we now have like 7,700 of them, led to that kind of call. And then he was like, oh, I'm interested in working with you. This project seems great. We've self-built systems like this before for reasons around data control. So we put him through the same process. He had this kind of call with one of us. I can't remember if it was Tim or I. One of us interviewed him first, then the other person interviewed him. And then we ran Postdoc Superweek with him and just released it. And again, it was obvious, like we're learning tons from him around how to make the platform more scalable. He immediately knew much more than us around a load of things to do with data infrastructure. Yeah, it was like kind of frankly, I would have never thought we'd be able to hire a data engineer. He's worked at like a ton of other really impressive places. But we didn't kind of go outbound looking for him. He was someone who'd used the project or who thought it was cool on the Internet first. So he was kind of already qualified as being interested, I guess, before we reached out. But at this point, I literally think it was like we'd interviewed three people and hired three people. So, again, it was a particularly efficient set of hiring. It is still kind of terrifying how quick we were to make decisions. But putting people at this page we could work with, again, we could just roll with it. It was probably self-selecting, like being open source, being really transparent early on, that led to a certain kind of person being interested in us. Because we really stood out as a business. I love what you said about, you know, you used to do calls with GitHub repo stars and you wanted to learn more from them. And, you know, you probably never thought that was going to lead to a hire. And here you are, your number three hire came from there. So who was employee number four? So I want to get the ordering right. I think the next employee was a woman called Lottie. She is a graphic designer. She started off as a graphic designer. She's starting to go into product design at Postdoc now. We knew that we would want to grow quite bottom up. We're very much a product that is built for a single person to adopt for free on day one. And so we're kind of like, OK, how are we going to grow really fast? You know, what would make me as a developer? What would kind of block me from wanting to try out some random open source projects? And there are lots of things that, like, no one else, like we want to see. There are some stars, like are other people using it? Like, is it well documented? But one of the components we felt was good design. Like if something's really well designed, even if it's like it gives you a lot of confidence that it's going to be worth sticking around for and like deploying it and integrating it and trying it out. And so, you know, at the same time, we also thought the thing that's different about Postdoc compared to the rest of the industry we're in is we're the developer focused product. So we really want to build this like stronger kind of we want to brand around that user. Everyone else has like blue websites that are super boring. You're on their pricing page. There's no pricing information. It's talk to sales. So we're going to like name ourselves after a hedgehog. We're going to have like just like a weird, unusual style because we are the weird and unusual one that's joined. And that's how we'll win. Like we're not going to win by being the same. So I thought, hey, if I have a graphic designer working with me, I think we could build something really different. That doesn't feel like a templated, generic kind of thing. We found Lottie literally on Twitter. We happened to see a tweet from a designer. Her portfolio was really weird and kind of cool. And so direct message on Twitter. So we didn't put a job ad out. We didn't like, again, it was really quick, but we just saw someone we liked. We reached out to them through an unusual channel. Again, a bit like doing like a GitHub star, like a Twitter direct message to like a graphic designers. Probably like someone who's like, again, she was early in her career as well. So, you know, it's like we're trying to like get a hold of someone that runs design at Figma or whatever at the time. But we could just see talent there. She seemed really scrappy. And I think we worked with her. I'm pretty sure we worked with her on the same basis. Like we got her to do some actual work with us. And to quote my co-founder, watching her do her job felt like watching someone perform magic to us. Like we could just see within like the first day she produced some artwork for our blog. And we're like, man, this is the kind of thing I wish I could do, but never will be able to. So, again, that was like another really easy kind of hire. I guess the core components where we reached out to someone in an unusual way. We de-risked it by doing some actual work. And that, again, made it easy to move forward. So what's fascinating about this story is I actually see similarities to your first hire. You actually saw her portfolio of work on Twitter. You really liked it when you DMed her. That's great. So let's go to the fifth hire. So who was the fifth hire and how did you go about finding them? Sure. So we hired another engineer. This was someone called Michael. He at the time was living in Poland. Well, he still is in Poland. He was an 18-year-old who was still at school. And he found us on I think it was a happy news, like who's hiring thread, which is consistently a good place for us to find engineers. And that's because our product is built for developers. We have this open source approach. We're really transparent. It makes the company stand out a lot. He had a successful side project that had over 10,000 users, which kind of demonstrated, okay, he can ship products from front to back and generally do full stack. He can think a little bit like a product person. He's passionate about development. I suspect he'll be really quick. He seems really smart. And he's definitely really scrappy. It was like two weeks before he finished school, not college. Let's try. We'll do our super week and, again, repeat the process. But, again, it would have been like he came to us because we posted on Hacker News or something. We would have interviewed a bunch of other people at this point. Yeah, we were looking for the kind of characteristics that Mariusz and Eric had and Lottie that made them successful and the process that had worked so well. We're just kind of repeating that part. But the actual place people were coming in from was quite varied. That's amazing. Really good stories. So two things before we wrap up that I want to touch on. One, it sounds like all five hires are still with PostHUD. Yeah. And that's rare, too, right? It doesn't happen in all startups. But, clearly, you had tested for the skills on the job, and there was a little bit of self-selection through all the documentation you did. One thing you did touch on was culture, right? There's a lot of emphasis on how do you test for culture. I did hear a theme, though, which you mentioned scrappiness. So somewhere along the way, you're testing for scrappiness and speed. But can you touch a little more on how did you test for culture, or did you even know what culture was, or did you define it after the first five employees came? That would be helpful. Scrappiness and speed were, like, the most basic things for us to get right. We're like, we're only going to win by being scrappy and fast. We're not going to win by being polished and slow. When we looked at these first few people working, the thing that struck us as particularly cool was everyone was quite anti being a manager. Everyone just wanted to do actual work. So we're kind of like, OK, we should really, really make sure we prioritize caring about individual contributors at postdoc. And that's still the case today. So if you're a senior at postdoc, if you're managing other staff or you're not, it doesn't affect your pay. We also will, if someone's basically interviewing 30 people, if someone's interviewing saying, hey, I mainly want to manage other people, I would like to grow a team, they won't get hired. We found that's kind of an anti-persona for what works for us. Our fundamental belief there is even if you are a manager, who's the most inspiring person to work for? And the kind of person that is cracking out brilliant work that you would love to be producing yourself, we felt was more inspiring. Even if it feels kind of like an inefficient use of time. You know, for me, for example, it's like, should I really be like writing blog posts, tweaking copy, bucking around, kind of doing individual stuff? I think the answer, like it feels inefficient, like I could just hire like three people at this time to do this. But I think the reality is like if I set the example of like I'll do individual stuff, I'll crack typos in our documentation, our merge pull request will be open for a long time if I can. It means other people follow that behavior. And then all of the individual people who are doing all the actual work will be much more effective. And they're working with you rather than kind of for you at that point. So, you know, that's like a subtle thing. But kind of we're looking for like an anti-manager personality quite often. But we're relying heavily on centralized management. Like we've written everything down. We have like a system for how all this stuff works. The last thing, I guess, is we have probably the most important thing we've got right with Hindsight. One is only hiring when we're absolutely certain this person is going to be a good hire. Every time you have this like slight negative feedback, like, oh, this person seems great apart from this one thing. Maybe it'll be fine. Or we'll just like coach them out of it. Invariably ends up becoming like 10, like magnified 10x. Once that person is there, we've got better at picking up the signals for what that could be. For us, it was wants to manage a team. The other thing we've done is we let people go very quickly. If they're not working, we try to give ourselves the conditions to do that as easily and as fairly as possible. So, for example, we pay four months notice to people if we let them go, which is an unusually large amount. A reason for this is we want people to be producing the best work their lives. One of the things I think that inspires a lot of our own team is working amongst a bunch of people that are also doing the same thing. And so if we have someone who's kind of not performing at the same level, they're not passionate, they're not engaged or they're struggling to get stuff out. And we feel like it's not going to be possible to get them to the level of the rest of the team. We will part ways with them at that point. But we'll pay them a lot of notice. We will give them direct feedback of this. But we are really decisive. I would say probably, again, much more so than other companies. But we're upfront around that in our documentation, in the habit. We'll talk to people about it when we're hiring, if they ask about it. But that kind of like, we will let people go. We're not afraid of making painful decisions like that has been really critical to keeping up the standard of the first few people who are amazing. That's great. You've done such a thorough job of the first five hires and shared such amazing insights for the founder audience here. Thank you so much, James, for your time. Thanks for having me. If you want to work for Posthog, visit posthog.com slash careers. If you're looking to be one of the first employees at a startup like Posthog, check out Y Combinator's job board at workatastartup.com.