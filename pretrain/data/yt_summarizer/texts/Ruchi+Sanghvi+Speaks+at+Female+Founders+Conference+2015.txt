Good afternoon, everyone. I'm so excited to be here today. I don't think I've ever spoken to such a large audience of female entrepreneurs and technologists before this. I think we need to give ourselves a huge round of applause. I'm so inspired by everyone's stories, your dreams, your passions, and your ambitions. And it wasn't so long ago that I was sitting in exactly those same seats, faced with the same challenges and soaking in every nugget of advice. So when Jessica asked me to speak today, my mind was swimming with all these learnings and experiences that I wanted to share with you. Some good, some bad, from my time at Facebook and then Dropbox and starting my own company, Go. Now all three companies are very different. They face different obstacles, and they had different markets. And essentially, they, like, had different outcomes. The reasons for their successes and failures were also different. There was no one game plan or formula that could have been applied for all three. But what I have come to learn is that the chances of success are far greater if you're able to approach things from first principles. And that's not easy to do. We gravitate towards what we already know, what we're familiar with, what has already succeeded. I'm sure many of you in the audience are either designing or building products. And part of your experience is, you know, you look for a successful example in the market and then base your work off of that. I'm certainly guilty of having done just that. And that kind of pattern matching isn't something that just applies to product, but it applies to hiring and management and even company culture. It's really hard to set aside your biases and look for better solutions. So today, I'm going to tell you about a few of my own personal experiences. About trying and not always succeeding to think from first principles about product, starting my own company, and defining my role in an organization. So my first project at Facebook was News Feed. Who here remembers Facebook before News Feed? It's just as I suspected. There are barely 20 of you out there. This is what Facebook looked like. It was a static homepage, and it had links to profiles, search, and even parties. To find information, you basically went to one person's profile, and then another, and then another. It was hugely inefficient. We knew we could do better. Facebook was obviously about people. And we wanted to show you stories about your friends, surface issues and recommendations, life events like weddings and babies. We wanted to deliver 10 million unique newspapers every single day. It was an awesome idea. But there was only one big problem with it. And not everyone in the company was on board with the vision. People were afraid of losing contextual monetization opportunities. Wow. That was a mouthful. Anyway. And if we crammed everything into News Feed, people were afraid of losing ad inventory and contextual targeting on pages like profile and events and groups. And why on earth would you build a product that would hamper your chances of making money? Today, that answer might be obvious. But back then, it wasn't so. We persisted and launched News Feed in the dead of the night. I wrote this blog post facetiously titled, Facebook Gets a Facelift. We were celebrating, popping bottles of champagne, watching these logs scroll by, but we had no idea what was in store for us the next morning. We woke up to hundreds of outraged people. Groups had formed in the middle of the night. Groups like I Hate Facebook and Ruchi's the Devil. There were newspaper reporters and students camped outside our offices. And to top it all, Mark was in a press store on the East Coast, our very first press store. Things just couldn't get any worse. The message from our users was clear. They hated News Feed. And even though we were only surfacing things you could already see in their profiles, they felt as though we had violated their privacy and their trust. To put it into context, imagine if you had just ended a relationship. You'd be comfortable telling your friends in person, maybe picking up the phone. But you'd be absolutely furious if someone sent an email blast to all your friends breaking the news. Now at this point, a lot of folks, both internal and external, wanted us to shut News Feed down. But we didn't. News Feed was actually working. And sure, there were some terrible moments like relationship breakups, which we eventually fixed. There were some awesome moments like birthdays. And now in addition to those 20 phone calls, you were getting hundreds of messages from all your friends on Facebook. News Feed became this information engine that quickly told you what was happening in your social graph, allowed you to engage with it, and then contribute back to it. It became this virtuous cycle that we all dream of, of consumption and production, that just kept on giving. It wasn't about maximizing page views. It was about understanding how users actually use the product from first principles. And sticking to that principle paid off. Amidst all that chaos and all that noise, we noticed something unusual. Even though everyone said they hated it, engagement had doubled. There were more page views than there ever were before. And our harshest critics, the very people who said they hated Facebook, were able to grow, I mean, were able to spread the word and organize because of News Feed. For the first time, their stories were being seen by all their friends. Now today, News Feed is this engagement and distribution engine of Facebook. No one here even remembers Facebook before News Feed. And it seems crazy to think that three engineers who had just graduated from college were able to build a personalized newspaper for 10 million users. In other words, one of the largest real-time distributed systems in the world. Back then, when we only had Linux and MySQL to work with, we were logging and aggregating the actions of millions of users. We were then slicing, ranking, and displaying them all in nearly real time. It was a tough problem to solve. But no one told us we couldn't do it. We didn't know how many engineers it would take to solve the problem. How we didn't even know if we could solve the problem. It wasn't about genius or even experience or the number of people. It was about not being afraid to learn and thinking and acting from first principles. So after five and a half years, I decided to leave Facebook and started my own company in 2010. I was so passionate about being an entrepreneur. And as I went about the business of starting my own company, I relied on advice from people. That first year, my experiences during that first year at Facebook. Things I'd read and things I'd heard from conferences like these. And the first thing everyone tells you to do is to find great technical cofounders. And I did just that. I convinced two of my friends, both early engineers at Facebook, Aditya and Akhil, to leave and join me. We had been roommates since college, and Aditya was sorry, is, in fact, my husband. I make that mistake all the time. We basically grew up together, and we deeply trusted and respected one another. You also hear things like be scrappy and live cheaply. And we were decidedly scrappy. Our very first office space was a little room in that clothing factory. And while it wasn't quite in a garage, it was right above one. And people jokingly referred to it as the sweatshop. Looks like an engineer's sweatshop, huh? So what we wanted to build was this collaboration and productivity platform for large groups. We had noticed that people were using a variety of disparate solutions, everything from e-mails to mailing lists, like Yahoo groups and Google groups, IRC chat channels, calendars and even wikis. And instead of increasing productivity, they were all just causing communication overhead. So we quickly built a prototype and launched it to a few alpha customers. Groups like, let's see, Stanford's entrepreneurs club, community groups, church groups, and we were even talking to Ted about launching at their next year's conference. Eventually we realized that our entire company was run on cove. We had stopped using e-mail and all the other tools out there. And what started off as a product for groups, communities, conferences and large scale organizations was something that we could eventually have launched to businesses as well. And I'm sure these early screenshots remind you of a few popular products today. So looking back, we got a few things right at cove. Things you usually hear about. But we also got a few important things wrong. And today I want to spend some time talking about what we actually got wrong. Because you usually don't hear that. We had a reasonable idea that clearly had some legs. But we were so impatient. We weren't building an environment that was conducive to being patient. We simply weren't giving ourselves a chance. We had these unrealistic expectations of what our growth rates should look like. And we're so disappointed when we didn't see those upward trajectories that social, local, and gaming companies saw. Companies that we were familiar with. We didn't take the time to understand that we were building a product that was just going to grow differently, slower and over a longer time horizon. We didn't take the time to define and internalize a different measure of value and success. We had second company syndrome. And by that I mean we were determined to not make the same mistakes we made at Facebook. And it sounds a little bit like parenting. At Facebook in the early days, infrastructure was so weak that it would break with every big product push. And then at Cove, we spent large amounts of time building beautiful infrastructure that would seamlessly scale only if we were successful. In fact, it was so good that Cove's templating system and data store model still powered Dropbox today. This was time we could have invested elsewhere. You probably hear this a million times, but I'm going to say it again, and I cannot emphasize how true it is. Startups have a binary outcome. They either win or they lose. And it's disheartening to say this, but the chances of success are pretty low. So you need to give yourself every advantage you can. You'll hear plenty of advice, grow organically, be scrappy, et cetera, et cetera, et cetera. And for the most part, it makes a ton of sense. But sometimes it's worth questioning conventional wisdom and thinking of things from first principles to see if you can give yourself that advantage. At Cove, we had a great network. Many people wanted to fund us. And instead of taking advantage of the things that we had access to, we defaulted to what we knew at Facebook. We were working 12 to 14 hours every single day, not realizing that we were no longer 22 and needed to pace ourselves for a marathon. And then we would spend those 14 hours a day in a sweatshop instead of using the funds we had to find comfortable office space. There are hundreds, if not thousands of startups following exactly the same path, being scrappy and trying to get their graphs to go up and to the right. And at Cove, we did exactly the same. We simply weren't thinking broadly enough, and we definitely weren't thinking from first principles. But every team has unique characteristics and skills. And if you're strong enough to identify those and leverage them, you'll be able to differentiate yourselves and build a unique company culture. So after about a year of working on Cove, it was the best year ever because I learned the most. Cove was acquired by Dropbox. We wanted to build at scale, and Dropbox gave us a bigger stage to do just that. We loved the people, and we loved the product, and we were so excited about our potential impact there. Aditya and I were brought in to accelerate progress and scale the company and the product. My first reaction was that we needed to move faster. We needed to launch faster. I couldn't understand why we only released the desktop client in Dropbox once every couple of months. Maybe we needed a faster release cycle, like the one we had at Facebook. Every day or every other day. I couldn't understand why we spent large amounts of time fixing esoteric bugs like the desktop client for Scandinavian Windows XP version 3 when it only impacted less than 0.1% of our user base. But then it sunk in. It would be terrible if you lost those wedding pictures or that PhD thesis that you were working on or your life's work. I realized that values like move fast and break things didn't apply to Dropbox. They worked at Facebook because Facebook was fundamentally about connecting people, and the only thing that mattered was adding as many people as you could onto the service. Back then, if you built beautiful, reliable software, no one cared. And for an engineer, that was absolutely mind-boggling. It essentially meant I could build and launch. I would catch these errors and bugs by trailing the error logs and then would fix them realtime. Now if I cultivated these same values at Dropbox, things would have just been a disaster. We needed to foster what was unique to Dropbox. And at Dropbox, that was sweating the details. And the only way I can explain that is if you click that little blue box on the upper right of your computer and it stopped working once every thousand times, you would think your computer is broken and then try to get it replaced. Quality was really, really important to Dropbox. And as a result, we moved slower. Not slowly, mind you, but slower than Facebook. Because that last 10% of polish took about 50% of engineering time. And once I realized that, I understood that the fastest way to accelerate progress was to grow the size of the team. When we joined Dropbox, there were only 30 engineers. And everyone was spread too thin across all the different platforms, web, desktop, mobile, and across all the different OSs. So when Drew, the CEO, asked me, what do you want to work on first? I said recruiting. I surprised even myself. Having been an engineer, a product manager, a product-facing CEO all my life, I picked recruiting. I had never done it before. But I was determined to change how it was done at Dropbox. I set this audacious goal of growing the company from 90 people to 270 people in less than seven months. And we all here in the audience know that hiring is an extremely difficult problem in Silicon Valley. I was even harder for us to reach that goal, but we did. And not only did we reach the goal, we were determined to hire people that we could learn from. Hire people that would help us improve our definition of quality. And then also make sure that they were culturally integrated into the company. And then after recruiting, I did a lot of other things at Dropbox. Everything from communications to marketing and even product. My role, title, or position didn't matter. The only thing that mattered was doing what it took to win. And ten years from now, no one is going to remember that title, but they are going to remember you by what you built and its impact on the world. So fast forward to today. I left Dropbox some time ago, and I'm starting afresh. It's exhilarating. I have no constraints, plenty of help, and nothing to lose. But at the same time, it's exhausting. Every day, every single day, someone or the other comes up to me and asks, so what are you doing next? And that's when the fear kicks in. I'm afraid of failing. And every day is like a roller coaster, and the hardest part is fighting my own psychology. But as I think of my next venture, I'm committed to staying patient and thinking from first principles. To breaking problems down to the fundamental truths. To identifying the facts, and then having zero assumptions about everything else. You and I, we're in very similar positions. We're either starting a venture or thinking of joining one. And we're all trying to channel our inner badger and our inner honey beavers here. And we'll get plenty of advice. But if you take away one message from this talk, it's this. Stay patient, don't quit, and think of things from first principles. Thank you.