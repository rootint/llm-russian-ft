And so I just noticed a lot of these teams, the really core thing going on is ego protection and nothing else. And like you can come up with all these intellectual arguments on why actually, you know, but when you really talk to someone and you get down to the core, it's being okay with getting rejection. Hey, this is Michael Seibel with Dalton Caldwell. Welcome to Rookie Mistakes. We asked YC founders for their rookie mistakes so we could share them with you and help you avoid them. Here's the first mistake that was written in. In the beginning, when you're still figuring out your idea or product, get in as many user or potential user calls as possible, at least one per day and ideally multiple. It seems obvious, but it's something that we personally failed at in the beginning. Don't brainstorm ideas in a silo. You don't know what people want. We have all these ideas in our heads as founders about what people want that the moment they are subjected to reality are embarrassingly wrong. Like there's nothing more humbling. There's nothing that makes you feel shittier than seeing real people using this thing that you built, that you spent a bunch of time on and just like ripping it to shreds and not understanding it or like using none of the features or clicking on the wrong thing. It's horrible. So talking to users is like the inoculation against this spending inordinate amounts of time doing something that is completely irrelevant to your end users, okay? So you're suggesting then that I take surveys, right? I mean, what's the most efficient way to learn what my customers want? I should survey them, right? So this may be offensive to some folks listening to this video, but I don't think that user surveys are that valuable when choosing a startup idea. Surveys are a useful way to get certain kinds of feedback. I would think of it as sort of micro-optimizations or trying to choose directions or say you have four names for a company. You want to choose which name was the best of the four choices. Yeah, great. Run a survey. But when you're looking for fundamental truths or you're trying to find your first customer and market validation, you want to be harsher or harder. Well, what does that mean? That means get someone to give you money for it. Do you see how it's a much higher bar to get someone to pay you money than to fill out a survey or to get someone to actually use your thing every day or to get them to install it on site? Think about how many products that we would all in a survey say, oh, that sounds useful. Like, oh, it's a very useful idea that you have that you would never in a million years actually pay a dollar for. I think the second thing about a survey that I've seen really be horrible is there's a tiny subset of your potential users who actually have expertise. They've actually tried 27 different products. This is actually a really important problem for them. But if you treat everyone you talk to the same and they fill out the same questions, you never get exposed to the expertise. And the best example I saw of this was early days Airbnb. Airbnb did this fun thing to get users in the very early days where they offered people who were putting their homes online for rental on other platforms free digital photos, high-res digital photos, back when like digital cameras weren't a thing yet, in order to list on Airbnb. And then instead of hiring a photographer, they went out, they got digital cameras, they went out and they took the photos. And to this day I still remember that there was one guy who they met, they took photos of this house. He loved the photos. He asked them, hey, do you want to sit down for coffee or tea or whatever? They started talking and then he said, you know, I've been renting out my house on all of the platforms on the internet for a decade and I have a notebook of all of my notes on all the things they do bad and all the things they do well for the last decade. Do you want to see it? And it's like, so in the Dalton scenario A, he would have received an email survey. Like how did he would have signed up for Airbnb, not had a listing, not used it, would have sent an email survey. Like how do you like Airbnb? Suggest things to improve, right? In the real world example, they got a book of all the things they needed to do. And again, like think about this. Imagine, you know these guys, the founders of Airbnb back in the day, the way they validated the idea was to ask people on a survey or they did some user research. They did an interview. They did a user interview. Would you like to rent your home? Do you see how what they could have learned from that is like this versus actually trying to get strangers to rent their home out to other strangers and all the like things that popped up trying to actually make the damn business work? Do you see how like they learned this much from that versus this much from writing a survey? Well, Dalton, it's not even this much. We're not, we're not, we're not, it could be negative, right? Like it could be negative. You're right. Well, I would never want to use that because it's dangerous. So you need to, you know, like. Done, right? You don't make Airbnb. You have another good anecdote about talking to users about the feature set for Twitch streamers back in the day. Can you, can you share that story about what, how you created a priority list based on them? Tell us about that. So when we were pivoting from Justin.tv and Twitch, Emmett Shear and Kevin Lin were kind of leading the Twitch team and they took this to heart. We had not done talking users for years. They took this to heart and they basically just started interviewing video game streamers and asking what they wanted. And the funniest thing is that at this point we had built every feature a live video social media site could have. We had chat, we had messaging, we had feed, we had social media stuff, we had embedding, we had every kind of sharing, we were on multiple platforms. And so they were really surprised when the first thing people said was, can I stream in higher quality? And we're like, really? That's like, you don't want like some big, we'll build you anything. Like, yeah, can I, you know what they said? They're like, well, you know, my computer costs like four grand and I paid for like the best internet connection in my neighborhood and I'm streaming this HD game and it looks like crap. And we were like, huh, well, because we built our own media server and we were controlling our own streaming, that was like an integer. That was like the easiest change you could ever make. And like, it would cost us incrementally more, but it was like, but like from a building product perspective, it was very anticlimactic. And so I think like three days later, like, you know, we introduced like, you know, higher, higher, you know, HD or something. And these people went crazy. They were like, I've never, first of all, they're like, I never imagined you could do this. Like, I thought it was some massive technical issue that was like, where you were screwing us for like a year just because it was too hard. And like suddenly you fix it. And then two, I've never used the website where I talked to someone about it and then it got better. And so this kind of started a series of, in hindsight, what looked like extremely obvious things to build, right? One was I want my stream to look better. Very quickly, two was I'd like to make money, please. Like, can you help me make money? You guys haven't thought about it, should we talk to users? Dude, don't you want to customize your page more with different colors and themes? It's like, no, but like I'll run ads on my own stuff. He's like, what do you mean? It's like, oh, if you give me a button where I'll just run a video ad on my own users and I can make money, I'll click it. And we're like, but wouldn't that, what? And then once again, we already had video ads. Like once again, it's like, fuck, like that's not even hard to build. Like the hardest thing was like, what should the button look like? And again, dude, you were experts. You were running just to do, how many years in were you adjusting? This was five years in. We were experts. You knew everything about everything, but then you were like, oh yeah, I guess we should talk to some of our users. And they said a bunch of stuff that blew your minds that none of you would have thought. And not only did it blow our minds, like the engineers listening should appreciate it. It wasn't hard to build. Like we could make them happy so easily compared to all the other shit on our brainstorm list that was like, you know, months long projects. And it was like, oh damn. So anyways, clearly going a little deep helps. Putting yourself in a situation where you can have a deep conversation is way better than anything else. We touched on this, and I want to bring up a quote because we can dig a little bit deeper. A YC Finder wrote in, a potential customer's opinion is not valuable unless they're willing to pay you, or use the product regularly, or share the product with their friends. They called this financial capital, pay you, time capital, usage, or social capital, give it to their friends. I think people really struggle with this because I think it's getting at the core of like a human condition thing, which is we want to be loved and we don't want to be rejected. And so, you know, getting through all these layers of defense that you've created for yourself to protect yourself from rejection is really hard. And it's like, yeah, man, it's personal work. Like it's work you're doing in your head. It's not work you're doing in the external world. And so I just noticed a lot of these teams, the really core thing going on is ego protection and nothing else. And like, you can come up with all these intellectual arguments on why actually, you know, but when you really talk to someone and you get down to the core, it's being okay with getting rejection. I always like to think about this a little bit like science. Like imagine that you're a founder. Oh, sorry. If you're a founder, imagine you're a scientist, right? And you could design one of two experiments. One experiment that actually tests your hypothesis and will give you actual information about whether your hypothesis is right or wrong. And another experiment that doesn't test the important variable at all. How many founders do we know who are never testing the important key hypothesis of their company for the exact reason you talked about? Because if I know that I'm wrong, my ego shatters or my investors will hate me or my co-founders will leave or some other reason I've told myself for not just figuring out, is the thing I think true or not? And what I find so surprising is that some founders just, it doesn't occur to them to think this way. You know, we had the Stripe founders come in and talk last batch. And we always get founders asking us about pricing. I got to discount my product, got to make it free early and da-da-da-da-da. And the Stripe founders said, we thought that startups had a problem accepting credit cards. We thought that all of the existing products out there back in the day were too hard to use and too much of a pain in the ass. So now we tested our hypothesis. We built something for developers that was a lot easier for startups to use. And then we charged more than the competition for it. Now, any scientist would say, okay, well, if we're trying to like test this variable, charging more to figure out whether startups would use this thing, it seems like a great just logical test. But for a startup founder, that seems like a crippling decision. And what I loved about the Stripe founders here is that they just went with the logical test. Like they kind of put their ego to the side and they said, hey, what's the fastest, most logical test that we can run to see if this thing is something that people want? Anyways, so we've talked about this like problem, this mistake of like, are my users willing to spend some capital, any kind of capital on using my product? Here's the last one that I love. The last one is kind of sometimes what I call the terrorist user or like the user that you love more than they love you. So here's the quote from the YC founder. When the customer you're pitching says, we really love your tech, but we can't pick it up today because X. We want to use it in our next project and we'll be in touch soon. This is a rejection. They don't want your tech. They just want you out of their office. This is a don't call me, I'll call you. So how does a founder interpret whether they're talking to a real customer or someone who's just trying to be polite or just trying to move on or doesn't have the need? How do you figure out? We told them to talk to their users. How do I figure out whether I'm talking to a live one? I think if we talk about being scientists again like we did a moment ago, a scientist would be dispassionate and would say, okay, no, and they wouldn't think about it anymore and they would go on to the next thing. You know, Dalton, I think a lot of the reason why founders get caught in this trap is because they were never taught what sales really is. Like they were taught sales in the context of, I would almost argue, argument. Like I think what a lot of founders think sales is, is more like what lawyers have to do to convince a jury. Like a jury has to be there and like they're going to make a decision and as a lawyer your job is to convince them one way or the other. I would argue that the best salespeople, convincing is really low on the list of what they're doing. Like I might say convincing isn't on the list of what they're doing, right? I would argue that the best salespeople are spending a lot of their time doing two things, learning and filtering, learning and filtering. It's a successful conversation with the customer if they say no quickly and they teach you about other kinds of customers who also are going to say no quickly. That's a success and like filtering out the customers who will never get to a yes as soon as possible is a success and I think that a lot of founders who've never done sales are like, oh no if they say no that just means that they don't understand how good my thing is and I have to explain it better. As opposed to like know that no is a gift, figure out what you could have asked them so they would have said no in the first three minutes of the conversation. You know so at YC we kind of talk about this as customer validation. Like every sales call should start with three questions that allow the customer to disqualify themselves from your product, right? A lot of your calls should be ending in the first five to ten minutes like, you know, I don't think we're right for you now. We're happy to call you back when we can do this thing or that thing but I don't think we're right for you now and if enough founders and it's funny because the themes are all the same. Being willing to say no, being willing to test the core hypothesis or sorry being willing to accept a no, being willing to test the core hypothesis, not feeling bad when someone doesn't want your thing. Like having a strong... Yeah not falling into a spiral of self-recrimination and self-doubt and you know like you can get really dark and it's like someone just doesn't want to buy your thing like who cares? You just have to get used to it. So if we were to wrap this up, this has become commonplace advice now to talk to your users. And I think that the reason why people don't do it and you know clearly what you've kind of played out is they don't do it because it makes them feel bad and they don't want to feel bad. And you know here's what I tell YC startups, I hope you're passionate about what you're working on because you're going to feel bad all the time. Like that's what you signed up for. So like don't run, like it's kind of like a marathon runner being like man I hate that feeling when my legs are super cramped and I don't want to run anymore. It's like well you're going to feel that way all the time. Like you're good because you can deal with that feeling and stay productive and stay logical and stay scientific about what you're doing. I think about a lot of what you just said in terms of the trade-off of being an employee versus being a founder. When you're an employee, if you're working at Apple or Google, you don't have to worry about any of this stuff. You're like you got 15 layers protecting you from external world feedback that you don't want. You have several layers of managers telling you it's all going to be okay and giving you constructive positive feedback. And getting fired when it doesn't work out, right? Because it's their fault, it wasn't your fault. You have company all hands where you can, you know, like you have all these layers where you're, this is all the stuff that's filtered out from you man. Like this is not your problem when you have a job. When you're a founder there is no filter and I think people freak out because they treat being a founder is on the same, like the same sort of thing as being an employee. They're like oh either I'm going to work at Google or I'm going to start a startup. It's like well no. This is different, right? One of them, in one of those things you're like a worker bee and like you can just work on your thing and it's really low stress and like you know you have to worry about your manager liking you and stuff like that. Isn't this, there's no managers, there's no filter. You're just out there dangling in the wind and every breeze that comes your way you're going to feel. The inputs that you experience as a founder are like completely unfiltered. And you have to be the person that tells the people working with you that it's all going to be okay. You're now in the role of the filter. Like you are the filter not the person being filtered to. Yikes. I think a lot of folks aren't mentally prepared for this. Reality is tricky when it's not filtered. But I'd argue it's more fun. It's more fun to look at the sky with your own eyes than to look at a drawing of a picture of a movie of a da-da-da-da of the sky. Like it's more fun. Like you got to live your life, right? Like you know like we only get a short time on this earth so you might as well use your own two eyes. That's at least my thought on this. All right. Well this is a great, this is a great wrap up on talking users, why and why it feels like crap.