In all three of these cases, these folks had the problem, they had experience, and in hindsight there was an obvious opportunity to make something 10x better, but most people thought they were idiots. And that's probably the overarching theme. They had to be contrarian. Hey, this is Michael Saibel with Dalton Caldwell. Today we're going to talk about where do great startup ideas come from. We've picked three successful YC companies to unpack this question, Airbnb, Coinbase, and Stripe. And there are three common themes that we've seen through all three of these companies. The first, timing was important. For each of these companies, there was a pre-existing product, pre-existing competitor, dominant you might say, but there was an opportunity to make something that was 10x better than what existed. Number two, most people, founders and investors, thought these ideas were horrible, either because they were too hard to execute or because they just were bad ideas. And then number three, and I think the coolest one of them, is that each of these opportunities turned out to be bigger than the founders even knew when they started. They turned out to be way bigger. All right, so let's talk about Airbnb. One of the things that I think is really interesting to set this up is that existing products did exist, right? Airbnb did not come up with this idea. So what were you using before Airbnb to Airbnb, Dalton? Yeah, for context, I think if you've only seen Airbnb, you think they came up with the idea. That's probably if I talk to my mom, she'd say, oh, Airbnb is a great idea that those founders dreamed up. But back in the day, I was already using VRBO before Airbnb was even funded by YC or existed. There was also a very popular startup called Couchsurfing, which was quite similar to Airbnb and it had a lot of mindshare, was a big network. And so it kind of felt like the third rate entrant to a crowded space at the time. I remember when they were in YC, that was my perspective. Do you remember that, Michael? Yes. Did you use any of those? Because I'd used VRBO personally. I had used VRBO. I had also used Couchsurfing. One of the reasons why I was actually excited about working with the Airbnb folks was because using Couchsurfing was so painful. And so I think that, you know, first thing when it comes to timing, I think they nailed this hardcore. They weren't first, but the existing products weren't great. And I think it's interesting to talk about why the existing products weren't great because honestly, that's important. I would argue that like there were two fundamental facts that made the existing products not good. The first is that VRBO and Craigslist did not facilitate payments. So when you arranged a house share with someone or staying in someone's apartment, you still had to pay them either in cash or check or wire. And there was a lot of friction because it's two people who don't know each other having to trust each other to transmit payments. I think the second problem that VRBO had was they charge hosts to list. And if you think about the core insight of this market, it's that hosts are the game. If you can get the most hosts, you win. You have the best inventory. But if you charge them upfront to be on your site, like you're probably doing it wrong. So to me, timing was huge. Existing product did not, there were 10x improvements that can be made. And the second thing that was really interesting was that they were solving their own problem. Most people don't realize that Airbnb started because Joe and Nate needed to make rent money. And there was a big conference going on in San Francisco and they basically rented out room on their floor to host people so that they could make some money. And it's funny because we always talk about personal problems, but like not being able to pay rent. That's like, that's a real problem, right? And that doesn't sound like a vacation rental, which was what I was used to seeing on VRBO, which was vacation rentals. Exactly. Exactly. I think it was interesting at the time that a lot of people realized that they could use their property and make extra money. And it's not a coincidence that this happened around the same time as the OA crash, where a lot of people needed to make an extra buck. And suddenly they realized, oh, I have an asset right now I can make some money on. Then I think the last thing is they used their own product. Airbnb didn't realize the insight around facilitating payments, around accepting payment when they launched. They didn't have that insight when they launched. Brian came and spoke to YC recently and he shared the story that when he used his own product and he forgot to bring money for payment and the host thought he was a fraud, he realized, oh, crap, like our site needs to allow people to pay. Like we have to solve this problem. So it's funny because these insights seems obvious now, but Dalton, back in the day, you know, put your investor hat on. What were the shit takes? Like, why did everyone think, oh, this is a dumb, this is dumb. Well, look, there's two extremes. One was renting a house when someone is already home, renting a room in a house with a host or there was like the ultimate, unappealing, scary, bad thing that no one wanted to do. Especially older folks, you know, like investor folks. Like investor types. You know. Who have a lot of money and can afford nice hotels. Yeah. Why would I want to go stay in a stranger's apartment in Manhattan, like, no thank you. Right. Like, extremely unappealing idea of people worried about those sorts of things. And then like the other insight I have for you on this one is, it was seen as uncool and impure when you're building the community at this time in history to charge money for it. Like, the couchsurfing ethos was, it was a very like communal, community-based, pay-it-forward, social collective action, decentralized goodness thing. And to be commercial was extremely in poor taste. And remember, Michael, you and I both were the founders in this era. All of the messaging that was bombarded from us, from everyone, all of our peers, is that making money isn't cool and being commercial isn't cool. And what they should have done is get as big as they could and get a hundred million people on Airbnb and then charge once they've built the network. And so to charge, that's a horrible idea, guys, build the network first and then charge. Right. Like, again, you went through this as a founder, man. Isn't this what you would have been told? It's what we were told. I mean, Twitch became big when we started diversifying our business model and started accepting direct payments from users in addition to ads. But that was seen as dumb back then. So clearly, and of course, this is going to be a common theme, if they had listened to most of the investors or most of the founders at the time, Airbnb wouldn't exist. Yeah, it'd be like, well, couchsurfing is free, so your plan is to build something like couchsurfing, but with no users and you're just starting and you're going to charge money for it. Good luck. That sounds like a suicide mission. Right. All right. So the next one is Coinbase. So set the scene for Coinbase. What do you think Brian saw when he was getting rolling? Yeah, so I was around back then and I was trying to buy Bitcoin back then, too. And I remember the Coinbase YC application really well in the whole historical context. So to set this up for people, circa 2011, 2012, it was really hard to buy Bitcoin. Really hard. I remember looking into it around 2011 and there was a step of sending money orders, like going to Western Union and sending a money order to some foreign country. And that's when I hopped out of it. I wish I would have done it. It would have made a lot of money, but I didn't because it just seemed too much like a total scam. Like if you're ever sending money orders to foreign countries, something is going wrong But anyway, I also was familiar with Mt. Gox. And Mt. Gox was the biggest and largest Bitcoin exchange back in the day. And it went down a lot and got hacked and everyone lost all their money. I actually lost some money in Mt. Gox, personally. I think I had about one Bitcoin in Mt. Gox. I'm not too worried about it. I feel like the reputation for Mt. Gox was like, you can get money in, but you can't ever get any money back out. That was the environment where Coinbase was coming in. And what it grew out of is that Mt. Gox was an acronym that was Magic the Gathering Online Exchange. It was originally a website to trade magic cards that they pivoted into Bitcoin. And so anyway, the historical insight was buying Bitcoin was something people wanted to do, but all of the options were pretty bad. That's the historical context. And Brian wanted to fix that. I think what's really interesting about this is we come back towards, he wasn't the first mover. He was not the first mover, but the product that existed was so bad that a 10x better product was actually within reach. It was actually possible. I think the other fun insight here is that portable online gold is valuable. It is 10x better than gold. And so as something you might want to have, if you think gold is something that you might want to own and it seems like the market does like owning gold, portable online gold is strictly better. So I think out of maybe all three of these founders, Brian was exposed to the most shit takes, the most people saying this was not going to work. So break that down for us. Explain all the reasons why Coinbase is not supposed to work and Brian should not be a successful founder today. At the time, people saw Bitcoin as a tiny market, that it was going to crash, that it was a bubble. Investor didn't like it. It was synonymous with a lot of actual fraud, didn't have a great reputation. Also getting a bank deal was impossible. It's not like other founders didn't want to start something like Coinbase. U.S. based exchanges were incredibly hard to start. And this is the reason why all the exchanges at the time were offshore, was the regulatory environments were different in different places. Right. Another thing I want to note is even Brian in his YC application didn't really believe in his own idea because what he basically applied to YC with was the P2P transfer parts. It wasn't buying Bitcoin and holding it. It was the idea that he could build something like PayPal to do P2P transfers. And that the buying Bitcoin part, that was just part of it. And so isn't it funny that even he kind of undercounted the simple promise of buying Bitcoin in a non-sketchy way with a debit card in the U.S. and not getting hacked and losing all your money. That was enough of an insight to be the basis for like a hundred billion dollar company. He didn't need to do all this other stuff. But to your point, and following the pattern, a valuable insight that he learns after starting the company, right? Like you don't have to have all the valuable insights before you start. Well, you remember what the Coinbase product was back in the day, right? It was a website. You logged in. You put in how much Bitcoin you wanted to buy and you push the button and you buy it. And that was, you could sell it too. There was no social network. There was no comment feed. You know, it was probably the simplest products. There were no graphs. It was one of the simplest products I've ever seen. Yeah. But it doesn't solve the right single problem at the time. And I think that the way that this is kind of embodied was that, fully embodied how bad of an idea people thought this was, is that he had an impossible time raising money on Demo Day. And so if he had taken the Demo Day signal, the investor's signal of, oh, we don't want to give you money and quit, we don't have Coinbase. Correct. All right. Last one, Stripe. So you had dabbled with payments pre-Stripe. How easy was it to accept credit cards online pre-Stripe? Yeah. Share the story with everyone. I have set up, before Stripe existed, I set up accepting credit cards for my companies twice. Once in 2002 or so, believe it or not, when I was very young. And then once again in 2007. And to get a merchant credit card account was like applying for a mortgage. You had to fill out lots of paper. You had to fax in stuff. You had to personally guarantee things. They had to do fraud checks on you. It was rough. It was expensive. There was minimums. And so it was a possible thing to do. But I would call it gnarly and the opposite of easy in every way. Okay. And so that was. So and I also remember when Stripe came out, I was actually in the Stripe beta. I was one of the first hundred customers of Stripe way back in the day for my third company, the third time I went to accept credit cards. And I really wanted it in terms of make something people want. When it came out and I read about it on Hacker News, I immediately wanted Stripe and I hadn't even seen it yet. I just knew I wanted it. So that's a historical context. You know, it's funny. We were authorized .NET users, too, at Justin.TV and Twitch. And perfect example, again, of like a taste of the good stuff, but so hard to use. It took us three months to start accepting credit cards. I think there was a 30 page contract that we had to read and figure out a sign. And it was like, wow. So once again, not first mover. I think another really interesting thing about Stripe was that it was a problem that they saw their peers in YC have. So literally, they were seeing all of their friends in YC not going through all of the pain of authorized .NET and they were hearing the story over and over again. And that's a good hint for people out there looking for ideas. Like if all of your smart technical friends are complaining about the same thing. Maybe it's a real problem. Now, last insight that I think that they had. Talk to me about their go to market and specifically about understanding that their customers were developers and not business guys. Because I think that was revolutionary at the time. Yeah. The really clever brand promise or marketing stance or whatever you want to call it they had, was to try to make the most beautiful website they could with the most beautiful documentation that was every programmer's dream. Like they constantly asked themselves and pushed themselves to say, what would I want? Or what would a programmer want? And this is so different than every other processing company because it was built for basically business people. Like the customer was not the programmer who had to implement authorized .NET was not the customer. It was like someone getting paid, you know, 20 bucks an hour or something to implement the code. Whereas this was like, they went nuts at making something that developers would just freak out about. And everyone copied it, by the way. Every developer would copy the Stripe documentation, copy the Stripe website. It was like the Apple. It was like if Steve Jobs had to design a payments company, it would be Stripe. And they totally did this on purpose. But what this created is a lot of buzz on hacker news and around nerds basically that, hey, have you seen the Stripe thing? Oh, are you in the beta? Also, they did a beta invite program. And so there was a it was a hot commodity to be able to get into Stripe and be able to use it. You were seen as well connected if you got the pleasure of getting to use Stripe. It was like a favor they were doing you to let you use their product. That's how that's how that's what a great job they did in making the website and documentation. Excellent. What I love is that when the Stripe founders came to speak at YC, the other detail they added was it was the most expensive product in the market. Like to make sure people really wanted it. They didn't give it away for free. They didn't price it comparably. They made it more expensive and people were still desperate to use it. Like that's how you know you have an insight. Like when you're the most expensive thing, speaking of Apple, and people still are desperate for it. Now, the shit takes, right? The shit takes were pretty clear. One, what are two teenagers doing in the banking space? The right government regulation. It's the most regulated space in the fucking world, right? It's like a suicide mission. You're like, hi, we're 19. We want to start basically a bank. Give us all your money. Like we're going to we're going to we're going to handle hundreds of millions of dollars of everyone's money. So yeah, that's our plan. And there will be no fraud. Like we're good. I think the second one is that even subtracting regulation, they needed a bank deal. They needed Wells Fargo to let them start using their rails. Well, like as an early stage startup, they need to get that, which at the time seemed impossible. And then, of course, I think the last one is that like, you know, PayPal existed. There was a really popular company where it felt like PayPal was like a quarter step away from this. Right. And it was like, oh, even if you start doing well, PayPal can go here instantly. They have all these users. They're the hot company. Yeah, it was seen as a crowded market with huge companies, with hundreds of employees, thousands of employees. And it's the classic thing. Again, the knock against YC companies at the time is YC would just fund crappy versions of existing company. Like the third rate knockoff version of something actually good was what YC companies were. Isn't that hilarious? I don't know if people remember that, but that was the reputation of YC companies is like, oh, yeah, they'll take an existing idea that's good and they'll make like a less popular version of it. Which kills me because like in all three of these cases, these folks had the problem. They had experience. And in hindsight, there was an obvious opportunity to make something 10x better. But most people thought they were idiots. And that's probably the overarching theme. They had to be contrarian to walk down this path because if they had asked 10 startup experts, 10 investors, 10 fellow founders, eight of them would have told them that they were stupid. And they had to build good products. You can't take for granted, we can't talk on a whiteboard and plan our strategy and win. All of these founders had to actually do it. And the doing it part was the hard part. Yes. Right. All these people had to execute and build a product that people loved and actually worked. And all these people built products that handled hundreds of millions of dollars and they couldn't lose the money. Right. So the actual execution bits, talk is cheap, execution is hard, execution is expensive. And they had all these folks had to execute. So I think what the takeaway here is, if we can sum this up, one, you shouldn't give a shit if there's an existing product in the market. If you're a user of that product or your friends are users of that product and they all hate it and you should not give a shit. Two, you should not give a shit if most of the people around you who you believe are experts don't think this is a good idea, especially you shouldn't care if they're not going to be users, if they have no experience with the pain of using the existing product. And then three, be very careful about your initial market math. Be very careful about pretending that you know how big the market could be. It turns out with so many of these transformational technologies, there are use cases you can't dream of that once you build a 10x better product, other people will do. And so each and every time these founders were presenting, oh, we have a market size of blank. The next time they raised money, they could say, actually, we made a mistake. The market size is actually bigger. We didn't think of this. We didn't think of that. And so don't be discouraged if someone's like, that's a tiny market. That's kind of a bullshit thing that would have killed all these companies. All right. Talk to you later, man.