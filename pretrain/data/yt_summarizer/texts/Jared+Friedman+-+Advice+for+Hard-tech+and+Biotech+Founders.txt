I'm Jared, I'm one of the partners at YC, and I'm going to talk about starting hard tech and biotech companies. Out of curiosity, in the audience here today, who is starting something like a hard tech or a biocompany? Okay, a handful of folks. Nice, excellent, excellent. Across all of Startup School, there are actually over a thousand companies that are doing hard tech or biotech things, which I think is really cool. So this talk is going to be most relevant for them, but also for other folks who might think about doing a company like this in the future, even if you're not right now. Here is what I'm going to talk about. I'm going to define what a hard tech company is. I'm going to talk about the two most common problems hard tech companies face and how to solve them. And then I'm going to talk a bit about fundraising specifically for hard tech companies, building on what Carolyn just talked about. So, what is a hard tech company? This is my definition, because I couldn't find a good one on the internet. So the way I see it is a hard tech company is a company that fulfills two criteria. One, it will take a lot of time and money to build your first product. And two, even if you had lots of time and money, it's not clear if it would be possible to build it at all. Companies like this are a little bit different from other kinds of companies. And interestingly, it doesn't have to be a physical product, and this doesn't say anything specifically about science and technology. It actually applies to a pretty broad range of companies. Another way of thinking about this is the difference between market risk and technical risk. So if your company is building a normal website or a mobile app, you probably have mostly market risk, which is to say you have a new idea. It's not totally clear if people are going to want this thing that you're making. But you probably don't have much technical risk, because building websites and apps is a solved problem at this point. Whereas with a hard tech company, you're probably doing something that clearly people would want if you could do it. The question is whether you actually can do it. Okay, so starting a hard tech company sounds hard. I mean, hard is even in the name. And I think this scares off a lot of founders who would otherwise start one. And I think this is a non-obvious misconception. So I'm going to try to address it. Here is a quote by Sam Altman that sounds like a complete paradox. So what Sam said is, in many ways, it's easier to start a hard company than an easy company. That sounds like it doesn't make any sense. But to explain what Sam... I think it's actually a pretty deep truth. And so to explain what Sam meant by this, I'm going to tell you a story about a company called Boom. Who's heard of Boom? A few folks. Okay, so Boom is a YC company from three years ago. And they're doing something completely awesome. They're building this. It is a supersonic passenger jet to replace the Concorde. It will fly at Mach 2.2 and take you from San Francisco to Tokyo in five hours. No joke, they're really doing this. The founder of Boom is a guy named Blake. And Boom is not Blake's first company. Before he started Boom, he started a very ordinary company that made a mobile shopping app. And Blake came and he talked to him at a YC dinner, and he reflected on the differences between his first company, the mobile shopping app, and his second company, Boom. And he said something really insightful. When he was building his mobile shopping app, getting the product live was easy. You can build a mobile shopping app in, like, a few weeks. But then everything after that is really hard. See, it's hard to get press to write about your mobile shopping app because it's not an interesting story. It's hard to get really talented employees to want to work on it. It's hard to get investors to want to meet with you to hear about your mobile shopping app. In short, it's just hard to get people to care about it. And so while launching the product is easy, turning the product into a really big company is actually really hard. Whereas with Boom, it's exactly the opposite. Building a supersonic jet is, like, incredibly hard, but everything else around it is really easy. And from the very beginning, back when Boom was, like, just an idea, Blake was able to get some of the most talented people in the world to want to help him. We are living at a unique time in the world where it has become easier than ever before to start a hard tech company. There is an incredible amount of investor demand to fund really crazy, ambitious ideas like Boom. So while you will have to raise a lot more money to do a company like this, it's also possible to raise a lot more money to do a company like this. And an interesting thing is that the market doesn't seem to fully internalize this yet because most YC applications are not for companies like this. And I think one reason that founders don't start companies that are super ambitious like this is because it's, like, really intimidating. I mean, as you guys know, like, starting any kind of company is really intimidating, but it seems like it's going to be easier if you start a company that's building something simple, like a mobile shopping app. And the, like, counterintuitive thing that Sam realized that I think is true is that it's only easier to get started. It isn't necessarily easier to turn into a really successful company. Not everyone knows how big a part of YC hard tech and biotech are, so I just wanted to give you a few quick stats. At YC, we funded over 250 biocompanies and probably a couple hundred hard tech companies as well. YC is actually the largest bioseed investor in the world and the largest hard tech seed investor in the world. This includes accelerators, seed funds, every kind of investor. And here's something that most people don't know. Hard tech companies that apply to YC actually have about a 10x higher acceptance rate than other kinds of applications. I don't completely know why that is. I suspect it's something to do with, like, certain kinds of founders being attracted to really ambitious ideas. So a really common question that I get from hard tech companies is, like, I am starting a biotech company. How much of YC's advice applies to me? A lot of it seems geared towards other kinds of companies. And the answer is, actually, most of it still applies. I went through the Startup School curriculum. This is the Startup School 2019 curriculum. And I highlighted all the lectures that are typically relevant for hard tech companies in green and the ones that are typically not relevant, at least at the early stages, in red. And as you can see, there is a lot more green than red. And this is my experience working with YC companies that are doing hard tech and biotech stuff, which is that while there are some differences, there are a lot more similarities than differences. OK, let's talk about the two biggest problems specific to hard tech companies. So if you guys remember Michael Seidel's talk about MVPs, he talked about how some companies have a heavy MVP. That is, it's going to take them a really long time and typically lots of money to build the first product. This is the case for most hard tech and biotech companies. So if you're in the position where you need millions of dollars to build your first product and you don't have millions of dollars right now, what do you do? The simple answer to this question is you have to figure out some way to make some progress on your idea that doesn't require millions of dollars. That is easier said than done. So to help give you guys some inspiration for how you might do that, I'm going to walk through seven examples of YC companies that were doing hard tech and biotech things that did exactly that. So the first one is Boom. So Boom's hack was they started off by doing a bunch of things that don't really cost any money at all. Here are some of the things that they did. They assembled a team of top advisors in the space to give them, like, credibility. They built computer simulations that showed that they had a design that could work. They built, like, a plastic model, like, a couple feet long that they could, like, take around to people to show them what their, like, vision of this plane would look like. And then they took that model, and they went around to a bunch of airlines, and they showed them the plastic plane model, and they used that to get interest from airlines to show that there would be customer demand if they were to build the plane. And they used basically all of these things in order to raise the money that they needed to actually build a plane. There's a YC company called Solugen, which does something really awesome. They use synthetic biology to produce hydrogen peroxide. So on the left is a photo of their current hydrogen peroxide plant, which is enormous and produces truckloads of hydrogen peroxide that they ship all around the country. Obviously, this plant cost a lot of money to build. But on the right side is their MVP. This is what they had when they applied to YC. It is a beaker that can produce about one cup of hydrogen peroxide. But this beaker proved the concept of their new industrial process for creating hydrogen peroxide, which is, like, the core idea of the company. And basically, they just, like, started with the beaker, and then they progressively scaled up to larger and larger installations until they had the giant hydrogen peroxide plant. So AirX is a YC company that originally planned to make their own medical device. Making a medical device is really hard. Their original plan was going to take, like, several years and millions of dollars in order to get FDA approval for this new device. Then they realized that they could launch a basic version of the same core service they hoped to launch by using an existing medical device that was already approved and writing some software around it. Now, it's not as good as the, like, eventual long-term vision, but it was, like, a good hack to build, like, something simple that worked well enough. And because of this plan, they were able to get live during YC in less than three months with no FDA approval. Notable Labs is a YC company that is developing new drugs for cancer. Developing new drugs for cancer is super expensive. It takes a super long time. And so the way they got started was by providing services to screen tumors to pharma companies. The services that they ran enabled them to generate both revenue and data that they're now using to develop their own drugs. Astronis is a YC company that builds telecommunication satellites and launches them into space. That is obviously not a cheap thing to do. It turns out, actually, that the cheapest telecommunication satellite that is useful costs, like, at least $10 million to build and launch. And so Astronis' hack was to start with a test satellite. The satellite in this photo was their first satellite. They built it in less than three months during YC and for less than $50,000. Now, this satellite doesn't do anything really useful. Like, you can't sell it. But by launching an actual, fully functional satellite into space and showing that they could do that, they were able to, like, generate the credibility that they needed and raise the money to launch, like, a full-scale, useful telecommunication satellite. Last example. Ginkgo Bioworks is a YC company that does genetic engineering of organisms. And in order to engineer their first organisms, they were going to need, like, millions of dollars. And so their hack was they went around to some large companies and they closed contracts to create those organisms before they had actually made the organisms. The contracts basically said, if Ginkgo makes these organisms, we will pay you lots of money. And they used those contracts, and they took those contracts around to investors, as proof of customer demand. And they used that to raise the millions of dollars from investors that they needed to actually make the organisms that they had promised to customers. So basically, they sold it before they made it. And this is a very generalizable technique that a lot of hard tech companies use in one form or another. Okay, so that brings me to the second most common hard tech problem, which is, how do you prove people will want your product if you haven't built it yet? This is important for you to prove to yourself, because the last thing you want to do is spend years working on some product, only to find that people don't actually want it at the end. But it's also important to prove it to investors. And so here are a couple of ways that you can do that. The best way is through pre-sales. So ideally, you just sell your product before you build it. This is what people do on Kickstarter. A good example of this is a company called Jetpack Aviation from two batches ago, which is building the flying motorcycle in the picture. And what Jetpack Aviation did was they ran a pre-sale campaign. And they basically sold flying motorcycles to a bunch of people on the internet to prove that people would want them. Unfortunately, doing pre-sales is not always possible. If you're doing, for example, if you're doing something medical that requires FDA approval, it's actually illegal to do pre-sales. So don't do that. So because of that, we created something called Letter of Intent, or LOI. And a letter of intent is a non-binding contract to buy your product when it's ready. Now, a non-binding contract seems like kind of a silly idea. Like, non-binding contract is kind of like a paradox. But it turns out that it's actually kind of a very clever construct. Because it's not binding, it doesn't actually commit the customer to buying. But because it looks like a contract, customers take it really seriously. It's easy when you're talking to a customer for them to, like, be polite and casually say, like, sure, I'd buy your thing if it ever worked someday because it's, like, no commitment for them. But if you ask them to sign an LOI, you'll find out if they're actually really serious about buying your product. And investors know that. So here's just some quick advice about LOIs. If you decide to go down this route, the more specific the LOI is, the more valuable it is. A good LOI includes all the following information. The cool thing is, if you can get a customer to sign an LOI like this, it literally gives you a roadmap for what you need to build in order to generate revenue from your product. Okay, the last thing I want to talk about is fundraising for hard tech and biotech companies. Most hard tech companies will not be able to bootstrap. They will typically have to raise money from investors. So part of building a hard tech company is coming up with a smart fundraising plan. And sometimes hard tech companies will come to me at the beginning of the batch with a fundraising plan that looks something like this. This fundraising plan is like, hey, I have a really good idea. I need $50 million to go and build it. So I'm just going to go pitch to a bunch of investors until somebody gives me $50 million and then I'll be all set. I don't recommend this plan. When I see a plan like this, it makes me think of this guy who's just like standing in front of a wall, staring up at the wall. The wall is like the $50 million impossible fundraiser. The fact is, it's just impossible to get investors to give you $50 million for an idea. You have to make some progress first. And so, what you want to do is a fundraising plan that looks like this. This still gets you to $50 million, but it splits it into five discrete races that start very small. And the key thing here is that for each of these fundraces, you want to have specific milestones that you hit. So like, you start off you want to be able to make some progress with your company before you raised any money at all like how Boom did. And then you want to use that in order to raise maybe like a couple hundred thousand dollars. And then you want to use the couple hundred thousand dollars to make more progress, which enables you to raise like a million dollars. And then you want to use the million dollars to make more progress so you can raise four million dollars, and so on. And, while the general principle is simple and easy to understand, a lot of the skill in building a hard tech company is in fine-tuning this fundraising plan so that like all the steps are like as small as they possibly can be because the most important part of this fundraising plan is that no step should be too large. By the time you go out and start trying to raise a 15 million dollar Series A, you have to actually have accomplished enough that investors will give you that larger fundraising round. Otherwise, you're just going to hit another one of those fundraising walls. And so, really good hard tech founders are maniacal about pushing down the size of their steps so that each step is as small as possible, which makes it as easy as possible for them to achieve the milestones that they need to raise the next round of funding. And, that is all that I have about hard tech and biotech companies. Applause Applause Applause Applause Okay, we'll do some questions. One over there. So, I thought it was interesting out of the seven examples something was on the AI side. Is there any ideas or examples there? Yeah, sure. So, the question was, of the examples, I didn't mention any AI companies and that's a great point. I probably should have included one. There's a really famous YC company that's an AI company called Cruise. You guys heard of Cruise? Cruise built self-driving cars and they got acquired by GM for a billion dollars. And, yeah, Cruise is a great example of a hard tech company. The original Cruise car was built in less than three months during YC. Kyle basically just like was in a garage building this car and writing code for like three months solid and by the end of YC he had an MVP that he could use to drive on the highway to show that like basically he could build a self-driving car. Yeah. One over there. Yeah? Have you ever worked with any non-profit hard tech startups and how did they raise money? So the question is, have I ever worked with any non-profit hard tech companies? No. Do you have one? Yes. Okay. We should maybe talk about that after. I'd be interested to hear how that could work. Any other... Question over here? So I'm wondering if there's ever sort of like a chicken and egg problem where like you're trying to get investors to like trust that people want this and you're also trying to get like companies to trust you to like I understand some of the contracts are non-defining and that some of them might be like if you deliver then like we'll give you X or whatever but it seems like a lot of companies would want to like plan specifically around like okay if I need these organisms or whatever like do I have a plan that's definitely going to get me the organisms or am I like maybe if I that's great that seems like a weird situation so how do you get around that? Yeah, so I'll try to paraphrase the question. It was like it seems like getting an LOI would be hard because the company doesn't know if you're actually going to be able to deliver it and they have to like plan around that and the answer is yes, it is hard to get LOIs like even though LOIs are not binding they're actually pretty hard to get and the weird thing is that the very fact that they're hard is it makes them valuable. If they were easy they wouldn't be worth anything. So the reason that they're kind of valuable is that it is hard to get a company to do that. They'll typically only do it if you're solving a really critical pain point for them. If it's just like a nice to have it's going to be hard to get an LOI which is actually a really good signal for you to know that you're working on something that's a really big problem for them. In the back. In the middle. You, yes. Thank you so much. A quick question. So is there a differentiation between hard tech ideas and moonshot ideas and how do you kind of judge that or go about those? Okay, so the question was is there a difference between hard tech and moonshot ideas? It's a terminology question. The answer is no. I was using the terms interchangeably. Yeah. What if the hard tech idea you're working on is disruptive? What happens? How do you prove it? So the question is if your idea is disruptive, how do you prove that you're going to be able to make it or how do you prove that people will want it if you make it? Both. Well, that's kind of the examples were kind of about some ideas for how to do that. Kind of the key thing for hard tech companies is to figure out ways to prove as much as possible as early as possible in order to reduce the perceived risk that the idea is going to work because the more you can reduce the risk, the easier it's going to be to raise money in order to get to the next step. One in the back. So for hard tech ideas, how do you reach the decision maker because it might not be clear in a big company which person is actually going to make the decision about this specific thing and in that case the person who's going to be using a product in the company might actually be very different from the decision maker and that ties into one of the very first lectures where you were supposed to take into account in the design. So how do you reconcile the issue of determining who the decision maker is while also making sure you're taking care of the end user? Okay, so the question is for a hard tech company where you're selling it to an enterprise and there's one person who's like the decision maker about buying it but there's another person who would actually be the user, how do you manage that situation, right? So this is actually like a really cool thing about the LOI is that the LOI basically forces you to do a dry run of the sales process that you will eventually do when you have the product before you have the product. So sometimes like sales are complicated because you have a bunch of different stakeholders in an organization who may have different incentives and by trying to get an LOI out of the organization you will basically uncover that fact and you will figure out what you need to do in order to appease all the different stakeholders in order to get the sale. So that can actually be really valuable feedback to get early on in your company. Last one over here. So when you're in the early stages of building out a team of hard tech engineers outside of going to grad school where are you finding these early engineers? So the question is like how do you find like founders and early employees for hard tech companies? The good news actually is I found that hard tech companies tend to have an easier time recruiting than other kinds of companies kind of like how I was talking about Boom because talented people are drawn towards like crazy ambitious ideas so I actually think it's like a real recruiting advantage to be working on something that's really like crazy and ambitious like that. But in terms of like where to find people I mean kind of like everywhere just like you know hiring employees it's going to be hard even if you're doing a hard tech company it's going to be hard to find like super talented people. Cool. That's all we have time for. Thank you everyone. Thank you.